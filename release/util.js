!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.utils=e():t.utils=e()}(this,function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=5)}([function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n,o,i={};i.isFunction=function(t){return"[object Function]"===Object.prototype.toString.call(t)},i.isObject=function(t){return"[object Object]"===Object.prototype.toString.call(t)},i.isString=function(t){return"[object String]"===Object.prototype.toString.call(t)},i.isNumber=function(t){return"[object Number]"===Object.prototype.toString.call(t)},i.cloneObj=n=function(t,e,r){if(!t||"object"!=typeof t||i.hash.isEmpty(t)||i.isFunction(r)&&r(t))return t;var o=t instanceof Array?[]:{};for(var a in t){var u=t[a];if(e&&"object"==typeof u)if(u instanceof Array){o[a]=[];for(var s=0;s<u.length;s++)"object"!=typeof u[s]?o[a].push(u[s]):o[a].push(n(u[s],e,r))}else o[a]=n(u,e,r);else o[a]=u}return o},i.extend=function(t,e){var r=function(){},n=i.cloneObj;r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t,t.superclass=e.prototype,e.prototype.constructor===Object.prototype.constructor&&(e.prototype.constructor=e),t.prototype.__extendList?t.prototype.__extendList=n(t.prototype.__extendList):t.prototype.__extendList=[],t.prototype.__extendList.push(e)},i.multiExtend=function(t,e,r){void 0===r&&(r=!0),i.extend(t,e[0]);for(var n=1;n<e.length;n++){var o=e[n];for(var a in o.prototype)"constructor"!=a&&(r?t.prototype[a]=o.prototype[a]:void 0!==t.prototype[a]&&null!==t.prototype[a]||(t.prototype[a]=o.prototype[a]));t.prototype.__extendList.push(o)}},i.instanceOf=i.isInstance=function(t,e){return t instanceof e||!!(t&&t.__extendList&&t.__extendList.includes(e))},i.noop=function(){},i.eval=function(t){return new Function("return "+t)()},i.jsonParse=function(t,e){if(!t||"string"!=typeof t)return t;var r;try{r=JSON.parse(t,e)}catch(e){try{r=i.eval("("+t+")")}catch(e){r=t}}return r},i.stringify=function(t,e,r){return t&&"object"==typeof t?JSON.stringify(t,e,r):t},i.random=(o=(new Date).getTime(),function(){return(o=(9301*o+49297)%233280)/233280}),e.default=i},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),r(2);var n=r(0),o=r(3),i=r(4);n.default.util=o.default,n.default.hash=i.default,e.default=n.default},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),Object.values||(Object.values=function(t){if(t!==Object(t))throw new TypeError("Object.values called on a non-object");var e,r=[];for(e in t)Object.prototype.hasOwnProperty.call(t,e)&&r.push(t[e]);return r}),String.prototype.startsWith||(String.prototype.startsWith=function(t){return this.substring(0,t.length)==t}),String.prototype.endsWith||(String.prototype.endsWith=function(t){return this.substring(this.length-t.length)==t}),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^\s*|\s*$/g,"")}),String.prototype.hasOwnProperty("replaceAll")||(String.prototype.replaceAll=function(t,e){var r=new RegExp(t.replace(/([\(\)\[\]\{\}\^\$\+\-\*\?\.\"\'\|\/\\])/g,"\\$1"),"ig");return this.replace(r,e)}),String.prototype.includes||(String.prototype.includes=function(t,e){return"number"!=typeof e&&(e=0),!(e+t.length>this.length)&&-1!==this.indexOf(t,e)}),Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(t,e){if(null==this)throw new TypeError('"this" is null or not defined');var r=Object(this),n=r.length>>>0;if(0===n)return!1;var o,i,a=0|e,u=Math.max(a>=0?a:n-Math.abs(a),0);for(;u<n;){if((o=r[u])===(i=t)||"number"==typeof o&&"number"==typeof i&&isNaN(o)&&isNaN(i))return!0;u++}return!1}}),Date.prototype.format||(Date.prototype.format=function(t){var e={"M+":this.getMonth()+1,"d+":this.getDate(),"H+":this.getHours(),"m+":this.getMinutes(),"s+":this.getSeconds(),"q+":Math.floor((this.getMonth()+3)/3),S:this.getMilliseconds()},r=this.getFullYear()+"";for(var n in r=r.length>=4?r:"0000".substr(0,4-r.length)+r,/(y+)/.test(t)&&(t=t.replace(RegExp.$1,(r+"").substr(4-RegExp.$1.length))),e)new RegExp("("+n+")").test(t)&&(t=t.replace(RegExp.$1,1==RegExp.$1.length?e[n]:("00"+e[n]).substr((""+e[n]).length)));return t}),Object.values||(Object.values=function(t){if(t!==Object(t))throw new TypeError("Object.values called on a non-object");var e,r=[];for(e in t)Object.prototype.hasOwnProperty.call(t,e)&&r.push(t[e]);return r}),function(){for(var t=0,e=["webkit","moz"],r=0;r<e.length&&!window.requestAnimationFrame;++r)window.requestAnimationFrame=window[e[r]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[e[r]+"CancelAnimationFrame"]||window[e[r]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(e){var r=(new Date).getTime(),n=Math.max(0,16-(r-t)),o=window.setTimeout(function(){e(r+n)},n);return t=r+n,o}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(t){clearTimeout(t)})}(),e.default=Object},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=r(0),o={_parsePathForAttribute:function(t){return"string"==typeof t?(-1!=t.indexOf("/")?t=t.split("/"):-1!=t.indexOf("\\")&&(t=t.split("\\")),"string"==typeof t?[t]:t):t},getAttribute:function(t,e){e=o._parsePathForAttribute(e);for(var r=0;r<e.length;r++){if(!t)return;t=t[e[r]]}return t},setAttribute:function(t,e,r){e=o._parsePathForAttribute(e);for(var n=0;n<e.length-1;n++){var i=e[n];t[i]||(t[i]={}),t=t[i]}t[e[e.length-1]]=r},delAttribute:function(t,e){e=o._parsePathForAttribute(e);for(var r=0;r<e.length-1;r++){var n=e[r];t[n]||(t[n]={}),t=t[n]}delete t[e[e.length-1]]},filenameFromPath:function(t){var e=(t=t.replaceAll("/","\\")).lastIndexOf("\\");return-1==e?t:t.substring(e+1,t.length)},getFilenamePath:function(t){var e=t.lastIndexOf("\\");return-1==e&&(e=t.lastIndexOf("/")),-1==e?t:t.substring(0,e+1)},getFilenameFile:function(t){var e=o.filenameFromPath(t),r=e.lastIndexOf(".");return-1==r?e:e.substring(0,r)},getFilenameType:function(t){var e=t.lastIndexOf(".");return-1==e?"":t.substring(e,t.length)},unique:function(t,e){for(var r=[],n=0;n<t.length;n++)for(var i=n+1;i<t.length;i++)t[n]==t[i]&&(e?o.addNewItemToArray(i,r):o.addNewItemToArray(n,r));return o.delItemsByIndexArray(t,r),t},clearEmptyItemInArray:function(t){for(var e=0;e<t.length;e++)void 0!==t[e]&&""!=t[e]||(t.splice(e,1),e-=1);return t},addNewItemToArray:function(t,e){for(var r=0;r<e.length;r++)if(e[r]==t)return r;return e.push(t),e.length},insertItemToArray:function(t,e,r){return e.splice(r,0,t),e},getConcomitanceBetweenArrays:function(t,e){for(var r=[],n=0;n<t.length;n++){var i=t[n];-1!=o.findItemInArray(e,i)&&o.addNewItemToArray(i,r)}return r},mergeArrays:function(t,e,r){if(r)return t.concat(e);for(var n=0;n<e.length;n++)t.push(e[n]);return t},concatArrays:function(t,e){for(var r=0;r<e.length;r++)-1==t.indexOf(e[r])&&t.push(e[r]);return t},subtractArrays:function(t,e){for(var r=[],n=0;n<t.length;n++){var i=t[n];-1==o.findItemInArray(e,i)&&o.addNewItemToArray(i,r)}return r},_ArraySort_Up:function(t,e){return t-e},_ArraySort_Down:function(t,e){return e-t},delItemsByIndexArray:function(t,e){e.sort(o._ArraySort_Down);for(var r=0;r<e.length;r++)t.splice(e[r],1)},delFirstItemFromArray:function(t,e){var r=o.findItemInArray(t,e);-1!=r&&t.splice(r,1)},getItemsFromArrayByKey:function(t,e){t instanceof Array||(t=[t]);var r=[];return t.map(function(t){t&&t[e]&&r.push(t[e])}),r},getItemsFromArrayByKeys:function(t,e,r){t instanceof Array||(t=[t]),e instanceof Array||(e=[e]);var n=[];return t.map(function(t){var o={};e.map(function(e){t&&e&&(r?o[e]=t[e]:t[e]&&(o[e]=t[e]))}),n.push(o)}),n},getAttrsFromObjectByKeys:function(t,e,r){if(e instanceof Array){var n=[],o={};return e.map(function(e){t&&e&&(r?t[e]&&(o[e]=t[e]):o[e]=t[e])}),n.push(o),n}if(t&&e)return t[e]}};o.sortArrayByChar=function(t,e){return t.sort(function(t,r){var n,i;e&&e.useAttribute?(n=(""+o.getAttribute(t,e.useAttribute)).split(""),i=(""+o.getAttribute(r,e.useAttribute)).split("")):(n=(""+t).split(""),i=(""+r).split(""));for(var a=0;a<n.length;a++){if(void 0===i[a])return 1;if(n[a]!=i[a]){var u="123456789ABCDE".indexOf(n[a]),s="123456789ABCDE".indexOf(i[a]);if(-1==u&&-1==s)return n[a]>i[a]?1:-1;if(-1!=u&&-1==s)return 1;if(-1==u&&-1!=s)return-1;if(u>s)return 1}}return-1})},o.sortArrayByNumber=function(t,e){return t.sort(function(t,r){return e&&e.useAttribute&&(t=t[e.useAttribute],r=r[e.useAttribute]),e&&"descending"==e.dir?t<r?1:-1:r<t?1:-1})},o.isNum=function(t){return""!==t&&/^\d*$/.test(t)},o.createUUID=function(){var t=new Date(1582,10,15,0,0,0,0),e=(new Date).getTime()-t.getTime();return o._UUID_getIntegerBits(e,0,31)+o._UUID_getIntegerBits(e,32,47)+(o._UUID_getIntegerBits(e,48,59)+"1")+o._UUID_getIntegerBits(o._UUID_rand(4095),0,7)+o._UUID_getIntegerBits(o._UUID_rand(4095),0,7)+(o._UUID_getIntegerBits(o._UUID_rand(8191),0,7)+o._UUID_getIntegerBits(o._UUID_rand(8191),8,15)+o._UUID_getIntegerBits(o._UUID_rand(8191),0,7)+o._UUID_getIntegerBits(o._UUID_rand(8191),8,15)+o._UUID_getIntegerBits(o._UUID_rand(8191),0,15))},o._UUID_getIntegerBits=function(t,e,r){var n=o._UUID_returnBase(t,16),i=[],a="",u=0;for(u=0;u<n.length;u++)i.push(n.substring(u,u+1));for(u=Math.floor(e/4);u<=Math.floor(r/4);u++)i[u]&&""!=i[u]?a+=i[u]:a+="0";return a},o._UUID_returnBase=function(t,e){return t.toString(e).toUpperCase()},o._UUID_rand=function(t){return Math.floor(n.default.random()*(t+1))},o.toFixed=function(t,e,r){if(r)return t.toFixed(e);var n=t.toString(),o=n.indexOf(".");return-1==o?n:n.length>o+e+1?t.toFixed(e):n},o.normalizeColor=function(t,e){"string"==typeof t&&(-1!=t.indexOf(" ")?t=t.split(" "):-1!=t.indexOf(",")&&(t=t.split(",")));var r=[t[0],t[1],t[2],t[3]];return void 0===e&&t[0]<=1&&t[1]<=1&&t[2]<=1&&(e=1),1!=e&&(r[0]=(r[0]/255).toFixed(3),r[1]=(r[1]/255).toFixed(3),r[2]=(r[2]/255).toFixed(3),void 0!==r[3]&&(r[3]=(r[3]/255).toFixed(3))),void 0===r[3]&&(r[3]=1),r},o.parseWebColor=function(t,e){"string"==typeof t&&(-1!=t.indexOf(" ")?t=t.split(" "):-1!=t.indexOf(",")&&(t=t.split(","))),void 0===e&&t[0]<=1&&t[1]<=1&&t[2]<=1&&(e=1);var r=[t[0],t[1],t[2]];1==e&&(r[0]=Math.round(255*r[0]),r[1]=Math.round(255*r[1]),r[2]=Math.round(255*r[2]));for(var n="#",o=0;o<r.length;o++){var i=Number(r[o]).toString(16),a=Number(i);isNaN(a)?1==i.length&&(i="0"+i):a<10&&(i="0"+i),n+=i}return n},o.toHexString=function(t){if("string"==typeof t){var e=t.split("#")[1],r=[0,0,0];return r[0]=parseInt(e.substr(0,2),16)/255,r[1]=parseInt(e.substr(2,2),16)/255,r[2]=parseInt(e.substr(4,2),16)/255,r}return[0,0,0]},o.delSpaceCharacter=function(t){for(var e=new RegExp("[`~!@#$^&*()=|{}':;',\\[\\].<>/?~！@#￥……&*（）%％|【】‘；：”“'。，、？-]"),r="",n=0;n<t.length;n++)r+=t.substr(n,1).replace(e,"");return r=(r=r.replace("\\","")).replace(/\s/gi,"")},o.replaceMark=function(t,e){for(var r=new RegExp("[`~^*=|{}<>￥……*|‘”“']"),n="",o=0;o<t.length;o++)n=(n+=t.substr(o,1).replace(r,"")).replace("-",""),e||(n=n.replace(" ",""));return n},o.testMark=function(t){return new RegExp("[`~^*|{}<>￥……*|‘”“]").test(t)},o.delSpace=function(t){return t=(t=(t=t.replace(/\s/gi,"")).replace(/'/gi,"")).replace(/"/gi,"")},o.base64Encode=function(t){var e,r,n,o,i,a,u="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(n=t.length,r=0,e="";r<n;){if(o=255&t.charCodeAt(r++),r==n){e+=u.charAt(o>>2),e+=u.charAt((3&o)<<4),e+="==";break}if(i=t.charCodeAt(r++),r==n){e+=u.charAt(o>>2),e+=u.charAt((3&o)<<4|(240&i)>>4),e+=u.charAt((15&i)<<2),e+="=";break}a=t.charCodeAt(r++),e+=u.charAt(o>>2),e+=u.charAt((3&o)<<4|(240&i)>>4),e+=u.charAt((15&i)<<2|(192&a)>>6),e+=u.charAt(63&a)}return e},o.flatten=function t(e){return e.reduce(function(e,r){return e.concat(Array.isArray(r)?t(r):r)},[])},o.dataURLtoBlob=function(t){for(var e=t.split(","),r=e[0].match(/:(.*?);/)[1],n=atob(e[1].replace(/\s/g,"")),o=n.length,i=new Uint8Array(o);o--;)i[o]=n.charCodeAt(o);return new Blob([i],{type:r})},e.default=o},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=r(0),o={getSize:function(t){var e=0;for(var r in t)e+=1;return e},isEmpty:function(t){for(var e in t)return!1;return!0},hasKey:function(t,e){return null!=t?t.hasOwnProperty(e):(console.error("传入opObject参数有误"),!1)},renameKey:function(t,e,r){if(t[e]){var n=t[e];delete t[e],t[r]=n}},getFirstKey:function(t){for(var e in t)return e;return null},keys:function(t){var e=[];for(var r in t)e.push(r);return e},getFirstValue:function(t){for(var e in t)return t[e]},values:function(t){if(t instanceof Array)return t;var e=[];for(var r in t)e.push(t[r]);return e},clear:function(t){for(var e in t)delete t[e]},combine:function t(e,r,o,i,a){if(void 0===a&&(a=!1),i){var u=(0,n.default.cloneObj)(e,a);return t(u,r,o,!1),u}for(var s in r)o?void 0===e[s]||null===e[s]||e[s]instanceof Array||"object"!=typeof e[s]||r[s]instanceof Array||"object"!=typeof r[s]?e[s]=r[s]:t(e[s],r[s],o,!1):e[s]=r[s];return e},combineNew:function t(e,r,o,i,a){if(void 0===a&&(a=!1),i){var u=(n.default.util.cloneObj||n.default.cloneObj)(e,a);return t(u,r,o,!1),u}for(var s in r)o?void 0===e[s]||null===e[s]||e[s]instanceof Array||"object"!=typeof e[s]||r[s]instanceof Array||"object"!=typeof r[s]?void 0!==e[s]&&null!==e[s]||(e[s]=r[s]):t(e[s],r[s],o,!1):void 0!==e[s]&&null!==e[s]||(e[s]=r[s]);return e},subtract:function(t,e,r){if(void 0===r&&(r=!0),r){var n={};for(var o in t)e&&e[o]||(n[o]=t[o]);return n}for(var i in e)delete t[i];return t},getIntersection:function(t,e,r){var n={};for(var o in t)e[o]&&(r?t[o]==e[o]&&(n[o]=t[o]):n[o]=t[o]);return n}};e.default=o},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=r(6),o=r(7);n.default.hash.combine(n.default.util,o.default),e.default=n.default},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=r(1),o=function(t,e,r){return void 0===e?null:void 0===r?n.default.jsonParse(t.getItem(e)):(null==r?t.removeItem(e):t.setItem(e,n.default.stringify(r)),n.default)};n.default.data=function(t,e){return o(localStorage,t,e)},n.default.sessionStorage=function(t,e){return o(sessionStorage,t,e)},n.default.getAllCookie=function(){return document.cookie};var i=function(t){var e=new RegExp("(^| )"+t+"=([^;]*)(;|$)"),r=document.cookie.match(e);return r?unescape(r[2]):null},a=function(t,e,r){void 0===r&&(r=300);var n=new Date;n.setTime(n.getTime()+24*r*60*60*1e3),document.cookie=t+"="+escape(e)+"; path=/;expires="+n.toUTCString()};n.default.cookie=function(t,e){return void 0===t?null:void 0===e?n.default.jsonParse(i(t)):(null==e?null!=i(r=t)&&a(r,"",-1):a(t,n.default.stringify(e)),n.default);var r},n.default.importJs=function(t){document.write("<script type='text/javascript' src='"+t+"'><\/script>")},n.default.importCss=function(t){document.write("<link rel='STYLESHEET' type='text/css' href='"+t+"'>")},e.default=n.default},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n={isChrome:function(){return/chrome/.test(navigator.userAgent.toLowerCase())},isIE:function(){return(/msie/i.test(navigator.userAgent.toLowerCase())||/Trident/i.test(navigator.userAgent.toLowerCase()))&&!/opera/.test(navigator.userAgent.toLowerCase())},urlArg:function(t){var e=new RegExp("(^|&)"+t+"=([^&]*)(&|$)"),r=window.location.search.substr(1).match(e);return null!=r?unescape(r[2]):null},getProjectName:function(){var t=window.location.pathname;return-1==t.indexOf("/",1)?"":t.substring(1,t.indexOf("/",1))},getIp:function(){return""!=window.location.host?window.location.protocol+"//"+window.location.host:""},is64:function(){return/win64/i.test(navigator.userAgent)&&/x64/i.test(navigator.userAgent)},getURLParams:function(t,e){return this.getURLParamsMap(e)[t]},getURLParamsMap:function(t){var e,r,n;t||(t=window);for(var o=t.location.search.substr(1).split("&"),i={},a=0;a<o.length;a++)(n=o[a].indexOf("="))>0&&(e=o[a].substring(0,n),r=o[a].substr(n+1),i[e]=r);return i},addParam2Url:function(t,e,r){var n="?";return-1!=t.indexOf("?")&&(n="&"),t+n+e+"="+encodeURIComponent(r)},removeParamFromUrl:function(t,e){if(-1==t.indexOf(e))return t;var r=t.substr(t.indexOf("?")+1),n=t.substr(0,t.indexOf("?")),o="",i=[];if(""!=r)for(var a=r.split("&"),u=0;u<a.length;u++){a[u].split("=")[0]!=e&&i.push(a[u])}return i.length>0&&(o="?"+i.join("&")),t=n+o},addUrlParam:function(t,e,r){return-1!=t.indexOf("?")?t+"&"+e+"="+r:t+"?"+e+"="+r},requireCss:function(t,e,r){var n=document.createElement("link");n.rel="stylesheet",n.type="text/css",e&&(n.id=e),r&&(n.className=r),n.href=t,document.getElementsByTagName("head")[0].appendChild(n)},setFavicon:function(t){this.removeFavicon();var e=document.createElement("link");e.type="image/x-icon",e.rel="icon",e.href=t,document.getElementsByTagName("head")[0].appendChild(e)},removeFavicon:function(){for(var t=document.getElementsByTagName("link"),e=document.getElementsByTagName("head")[0],r=0;r<t.length;r++)"icon"===t[r].getAttribute("rel")&&e.removeChild(t[r])},getHashMap:function(){var t=window.location.hash.split("#")[1],e={};if(!t)return e;for(var r=0;r<t.length;r++){var n=t[r].split("=");e[n[0]]=decodeURIComponent(n[1])}return e},getHashByKey:function(t){return this.getHashMap()[t]},detectZoom:function(){var t=0,e=window.screen,r=navigator.userAgent.toLowerCase();return void 0!==window.devicePixelRatio?t=window.devicePixelRatio:~r.indexOf("msie")?e.deviceXDPI&&e.logicalXDPI&&(t=e.deviceXDPI/e.logicalXDPI):void 0!==window.outerWidth&&void 0!==window.innerWidth&&(t=window.outerWidth/window.innerWidth),t}};e.default=n}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91dGlscy93ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCJ3ZWJwYWNrOi8vdXRpbHMvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdXRpbHMvLi9zcmMvY29tbW9uL3VpbnYudHMiLCJ3ZWJwYWNrOi8vdXRpbHMvLi9zcmMvY29tbW9uL2luZGV4LnRzIiwid2VicGFjazovL3V0aWxzLy4vc3JjL2NvbW1vbi9wb2x5ZmlsbC50cyIsIndlYnBhY2s6Ly91dGlscy8uL3NyYy9jb21tb24vdXRpbC50cyIsIndlYnBhY2s6Ly91dGlscy8uL3NyYy9jb21tb24vaGFzaC50cyIsIndlYnBhY2s6Ly91dGlscy8uL3NyYy9icm93c2VyL2luZGV4LnRzIiwid2VicGFjazovL3V0aWxzLy4vc3JjL2Jyb3dzZXIvdWludi50cyIsIndlYnBhY2s6Ly91dGlscy8uL3NyYy9icm93c2VyL3V0aWwudHMiXSwibmFtZXMiOlsicm9vdCIsImZhY3RvcnkiLCJleHBvcnRzIiwibW9kdWxlIiwiZGVmaW5lIiwiYW1kIiwidGhpcyIsImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJjbG9uZSIsInNlZWQiLCJ1aW52IiwiaXNGdW5jdGlvbiIsImZuIiwidG9TdHJpbmciLCJpc09iamVjdCIsIm9iaiIsImlzU3RyaW5nIiwiaXNOdW1iZXIiLCJjbG9uZU9iaiIsImlzRGVlcCIsImVuZEZ1biIsImhhc2giLCJpc0VtcHR5IiwiQXJyYXkiLCJwcm9wIiwiaiIsImxlbmd0aCIsInB1c2giLCJleHRlbmQiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJGIiwiY2xvbmVGdW4iLCJjb25zdHJ1Y3RvciIsInN1cGVyY2xhc3MiLCJfX2V4dGVuZExpc3QiLCJtdWx0aUV4dGVuZCIsInN1cGVyQ2xhc3NlcyIsInJlcGxlY2VFeGlzdGVkTWVtYmVyIiwidW5kZWZpbmVkIiwiY3VyU3VwZXJDbGFzcyIsImN1ciIsImluc3RhbmNlT2YiLCJpc0luc3RhbmNlIiwiaW5jbHVkZXMiLCJub29wIiwiZXZhbCIsImRhdGEiLCJGdW5jdGlvbiIsImpzb25QYXJzZSIsInJldml2ZXIiLCJqc29uIiwiSlNPTiIsInBhcnNlIiwiZSIsImUyIiwic3RyaW5naWZ5IiwidiIsInJlcGxhY2VyIiwic3BhY2UiLCJyYW5kb20iLCJEYXRlIiwiZ2V0VGltZSIsImRlZmF1bHQiLCJ1aW52XzEiLCJ1dGlsXzEiLCJoYXNoXzEiLCJ1dGlsIiwidmFsdWVzIiwiVHlwZUVycm9yIiwidmFsIiwiU3RyaW5nIiwic3RhcnRzV2l0aCIsImsiLCJzdWJzdHJpbmciLCJlbmRzV2l0aCIsInRyaW0iLCJyZXBsYWNlIiwicmVwbGFjZUFsbCIsInMxIiwiczIiLCJSZWdFeHAiLCJzZWFyY2giLCJzdGFydCIsImluZGV4T2YiLCJzZWFyY2hFbGVtZW50IiwiZnJvbUluZGV4IiwibGVuIiwieCIsInkiLCJNYXRoIiwibWF4IiwiYWJzIiwiaXNOYU4iLCJmb3JtYXQiLCJmbXQiLCJNKyIsImdldE1vbnRoIiwiZCsiLCJnZXREYXRlIiwiSCsiLCJnZXRIb3VycyIsIm0rIiwiZ2V0TWludXRlcyIsInMrIiwiZ2V0U2Vjb25kcyIsInErIiwiZmxvb3IiLCJTIiwiZ2V0TWlsbGlzZWNvbmRzIiwieWVhcnN0ciIsImdldEZ1bGxZZWFyIiwic3Vic3RyIiwidGVzdCIsIiQxIiwibGFzdFRpbWUiLCJ2ZW5kb3JzIiwid2luZG93IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJjYWxsYmFjayIsImN1cnJUaW1lIiwidGltZVRvQ2FsbCIsImlkIiwic2V0VGltZW91dCIsImNsZWFyVGltZW91dCIsIl9wYXJzZVBhdGhGb3JBdHRyaWJ1dGUiLCJzcGxpdCIsImdldEF0dHJpYnV0ZSIsInBhdGgiLCJzZXRBdHRyaWJ1dGUiLCJkZWxBdHRyaWJ1dGUiLCJmaWxlbmFtZUZyb21QYXRoIiwib3BGaWxlbmFtZSIsInBvcyIsImxhc3RJbmRleE9mIiwiZ2V0RmlsZW5hbWVQYXRoIiwiZ2V0RmlsZW5hbWVGaWxlIiwiZmlsZW5hbWUiLCJnZXRGaWxlbmFtZVR5cGUiLCJ1bmlxdWUiLCJyZXN1bHRzIiwia2VlcEZpcnN0IiwiZGVsTGlzdCIsImlpIiwiYWRkTmV3SXRlbVRvQXJyYXkiLCJkZWxJdGVtc0J5SW5kZXhBcnJheSIsImNsZWFyRW1wdHlJdGVtSW5BcnJheSIsIm9wQXJyYXkiLCJzcGxpY2UiLCJvcFZhbHVlIiwiaW5zZXJ0SXRlbVRvQXJyYXkiLCJpbmRleCIsImdldENvbmNvbWl0YW5jZUJldHdlZW5BcnJheXMiLCJvcEFycmF5QSIsIm9wQXJyYXlCIiwicmVzdWx0IiwiaXRlbUEiLCJmaW5kSXRlbUluQXJyYXkiLCJtZXJnZUFycmF5cyIsInJldHVybk5ldyIsImNvbmNhdCIsImNvbmNhdEFycmF5cyIsInN1YnRyYWN0QXJyYXlzIiwiX0FycmF5U29ydF9VcCIsImEiLCJiIiwiX0FycmF5U29ydF9Eb3duIiwib3BBIiwib3BJQSIsInNvcnQiLCJkZWxGaXJzdEl0ZW1Gcm9tQXJyYXkiLCJvcEl0ZW0iLCJnZXRJdGVtc0Zyb21BcnJheUJ5S2V5IiwibWFwIiwiZ2V0SXRlbXNGcm9tQXJyYXlCeUtleXMiLCJrZXlzIiwiaXNBbGxvd051bGwiLCJnZXRBdHRyc0Zyb21PYmplY3RCeUtleXMiLCJpc0ZpbHRlck51bGwiLCJzb3J0QXJyYXlCeUNoYXIiLCJwYXJhbSIsImMxIiwiYzIiLCJpbmRleGEiLCJpbmRleGIiLCJzb3J0QXJyYXlCeU51bWJlciIsImlzTnVtIiwibnVtIiwiY3JlYXRlVVVJRCIsImRnIiwiX1VVSURfZ2V0SW50ZWdlckJpdHMiLCJfVVVJRF9yYW5kIiwiZW5kIiwiYmFzZTE2IiwiX1VVSURfcmV0dXJuQmFzZSIsInF1YWRBcnJheSIsInF1YWRTdHJpbmciLCJudW1iZXIiLCJiYXNlIiwidG9VcHBlckNhc2UiLCJ0b0ZpeGVkIiwiZm9yY2UiLCJzdHIiLCJub3JtYWxpemVDb2xvciIsImlucHV0IiwiY29sb3JTeXN0ZW0iLCJwYXJzZVdlYkNvbG9yIiwidG1wIiwicm91bmQiLCJOdW1iZXIiLCJOdW1iZXJuIiwidG9IZXhTdHJpbmciLCJjb2xvciIsImxheWVyQ29sb3IiLCJwYXJzZUludCIsImRlbFNwYWNlQ2hhcmFjdGVyIiwiY2hhcmFjdGVycyIsInBhdHRlcm4iLCJycyIsInJlcGxhY2VNYXJrIiwiaXNPdXRTcGFjZSIsInRlc3RNYXJrIiwiZGVsU3BhY2UiLCJiYXNlNjRFbmNvZGUiLCJvdXQiLCJjMyIsImJhc2U2NEVuY29kZUNoYXJzIiwiY2hhckNvZGVBdCIsImNoYXJBdCIsImZsYXR0ZW4iLCJhcnIiLCJyZWR1Y2UiLCJpc0FycmF5IiwiZGF0YVVSTHRvQmxvYiIsImRhdGFVcmwiLCJtaW1lIiwibWF0Y2giLCJic3RyIiwiYXRvYiIsInU4YXJyIiwiVWludDhBcnJheSIsIkJsb2IiLCJ0eXBlIiwiZ2V0U2l6ZSIsIm9wT2JqZWN0IiwiaGFzS2V5IiwiY29uc29sZSIsImVycm9yIiwicmVuYW1lS2V5Iiwib2xkS2V5IiwibmV3S2V5IiwiZ2V0Rmlyc3RLZXkiLCJnZXRGaXJzdFZhbHVlIiwiY2xlYXIiLCJjb21iaW5lIiwiZnVuIiwib3BPYmplY3RBIiwib3BPYmplY3RCIiwiaXNSZXR1cm5OZXciLCJpc0Nsb25lT2JqRGVlcCIsInRlbXBGdW4iLCJjb21iaW5lTmV3Iiwic3VidHJhY3QiLCJjdXIyIiwiZ2V0SW50ZXJzZWN0aW9uIiwia2VlcFZhbHVlU2FtZSIsImluZGV4XzEiLCJzdG9yYWdlIiwiZ2V0SXRlbSIsInJlbW92ZUl0ZW0iLCJzZXRJdGVtIiwibG9jYWxTdG9yYWdlIiwic2Vzc2lvblN0b3JhZ2UiLCJnZXRBbGxDb29raWUiLCJkb2N1bWVudCIsImNvb2tpZSIsImdldENvb2tpZSIsInJlZyIsInVuZXNjYXBlIiwic2V0Q29va2llIiwiZGF5cyIsImV4cCIsInNldFRpbWUiLCJlc2NhcGUiLCJ0b1VUQ1N0cmluZyIsImltcG9ydEpzIiwid3JpdGUiLCJpbXBvcnRDc3MiLCJpc0Nocm9tZSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsInRvTG93ZXJDYXNlIiwiaXNJRSIsInVybEFyZyIsImxvY2F0aW9uIiwiZ2V0UHJvamVjdE5hbWUiLCJwcm9qZWN0IiwicGF0aG5hbWUiLCJnZXRJcCIsImhvc3QiLCJwcm90b2NvbCIsImlzNjQiLCJnZXRVUkxQYXJhbXMiLCJwYXJhbU5hbWUiLCJ3aW4iLCJnZXRVUkxQYXJhbXNNYXAiLCJwYXJhbXMiLCJhZGRQYXJhbTJVcmwiLCJ1cmwiLCJhbmRTdHIiLCJlbmNvZGVVUklDb21wb25lbnQiLCJyZW1vdmVQYXJhbUZyb21VcmwiLCJ1cmxQYXJhbSIsImJlZm9yZVVybCIsIm5leHRVcmwiLCJ1cmxQYXJhbUFyciIsImpvaW4iLCJhZGRVcmxQYXJhbSIsInJlcXVpcmVDc3MiLCJjc3NQYXRoIiwiY2xhc3NOYW1lIiwibGluayIsImNyZWF0ZUVsZW1lbnQiLCJyZWwiLCJocmVmIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJhcHBlbmRDaGlsZCIsInNldEZhdmljb24iLCJyZW1vdmVGYXZpY29uIiwibGlua3MiLCJoZWFkIiwicmVtb3ZlQ2hpbGQiLCJnZXRIYXNoTWFwIiwiZGF0YXMiLCJkZWNvZGVVUklDb21wb25lbnQiLCJnZXRIYXNoQnlLZXkiLCJkZXRlY3Rab29tIiwicmF0aW8iLCJzY3JlZW4iLCJ1YSIsImRldmljZVBpeGVsUmF0aW8iLCJkZXZpY2VYRFBJIiwibG9naWNhbFhEUEkiLCJvdXRlcldp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QUFFLElBQU1xVixtQkFBbUJyVixFQUFFLElBRW5DLE9BQU9vTCxHQVFUa0ssYUFBb0IsU0FBVWpWLEdBQzVCLE9BQU8zQixLQUFLeVcsYUFBYTlVLElBUTNCa1YsV0FBa0IsV0FDaEIsSUFBSUMsRUFBUSxFQUNWQyxFQUFTOU4sT0FBTzhOLE9BQ2hCQyxFQUFLbEQsVUFBVUMsVUFBVUMsY0FXM0IsWUFUZ0M3UCxJQUE1QjhFLE9BQU9nTyxpQkFDVEgsRUFBUTdOLE9BQU9nTyxrQkFDTEQsRUFBR2hRLFFBQVEsUUFDakIrUCxFQUFPRyxZQUFjSCxFQUFPSSxjQUM5QkwsRUFBUUMsRUFBT0csV0FBYUgsRUFBT0ksa0JBRU5oVCxJQUF0QjhFLE9BQU9tTyxpQkFBa0RqVCxJQUF0QjhFLE9BQU9vTyxhQUNuRFAsRUFBUTdOLE9BQU9tTyxXQUFhbk8sT0FBT29PLFlBRTlCUCxJQWVUbFgsRUFBQStGLFFBQWVJIiwiZmlsZSI6InV0aWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdGVsc2UgaWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKVxuXHRcdGV4cG9ydHNbXCJ1dGlsc1wiXSA9IGZhY3RvcnkoKTtcblx0ZWxzZVxuXHRcdHJvb3RbXCJ1dGlsc1wiXSA9IGZhY3RvcnkoKTtcbn0pKHRoaXMsIGZ1bmN0aW9uKCkge1xucmV0dXJuICIsIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSA1KTtcbiIsImNvbnN0IHVpbnY6YW55ID0ge307XHJcblxyXG4vKipcclxuICog5Yik5pat5piv5ZCm5Ye95pWwXHJcbiAqL1xyXG51aW52LmlzRnVuY3Rpb24gPSBmdW5jdGlvbiAoZm4pIHtcclxuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGZuKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcclxufTtcclxuXHJcbi8qKlxyXG4gKiDliKTmlq3mmK/lkKblr7nosaFcclxuICovXHJcbnVpbnYuaXNPYmplY3QgPSBmdW5jdGlvbiAob2JqKSB7XHJcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBPYmplY3RdJztcclxufTtcclxuXHJcbi8qKlxyXG4gKiDliKTmlq3mmK/lkKblrZfnrKbkuLJcclxuICovXHJcbnVpbnYuaXNTdHJpbmcgPSBmdW5jdGlvbiAob2JqKSB7XHJcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBTdHJpbmddJztcclxufTtcclxuXHJcbi8qKlxyXG4gKiDliKTmlq3mmK/lkKbmlbDlrZdcclxuICovXHJcbnVpbnYuaXNOdW1iZXIgPSBmdW5jdGlvbiAob2JqKSB7XHJcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBOdW1iZXJdJztcclxufTtcclxuLyoqXHJcbiAqIOWFi+mahuWvueixoVxyXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqIOWFi+mahueahOWvueixoVxyXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGlzRGVlcCDmmK/lkKbmt7HluqblhYvpmobvvIzpu5jorqTlkKZcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gZW5kRnVuIOWBnOatouWFi+mahueahOadoeS7tuivreWPpVxyXG4gKiBAcmV0dXJuIHtBcnJheX0gIOWFi+mahuWQjueahOWvueixoVxyXG4gKi9cclxudWludi5jbG9uZU9iaiA9IChmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIGNsb25lID0gZnVuY3Rpb24gKG9iaiwgaXNEZWVwLCBlbmRGdW4pIHtcclxuICAgIGlmICghb2JqIHx8IHR5cGVvZiBvYmogIT09ICdvYmplY3QnIHx8IHVpbnYuaGFzaC5pc0VtcHR5KG9iaikgfHwgKHVpbnYuaXNGdW5jdGlvbihlbmRGdW4pICYmIGVuZEZ1bihvYmopKSkge1xyXG4gICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG4gICAgdmFyIGMgPSBvYmogaW5zdGFuY2VvZiBBcnJheSA/IFtdIDoge307XHJcbiAgICBmb3IgKHZhciBpIGluIG9iaikge1xyXG4gICAgICB2YXIgcHJvcCA9IG9ialtpXTtcclxuICAgICAgaWYgKGlzRGVlcCAmJiB0eXBlb2YgcHJvcCA9PSAnb2JqZWN0Jykge1xyXG4gICAgICAgIGlmIChwcm9wIGluc3RhbmNlb2YgQXJyYXkpIHtcclxuICAgICAgICAgIGNbaV0gPSBbXTtcclxuXHJcbiAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHByb3AubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBwcm9wW2pdICE9ICdvYmplY3QnKSB7XHJcbiAgICAgICAgICAgICAgY1tpXS5wdXNoKHByb3Bbal0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIGNbaV0ucHVzaChjbG9uZShwcm9wW2pdLCBpc0RlZXAsIGVuZEZ1bikpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNbaV0gPSBjbG9uZShwcm9wLCBpc0RlZXAsIGVuZEZ1bik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNbaV0gPSBwcm9wO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gYztcclxuICB9O1xyXG4gIHJldHVybiBjbG9uZTtcclxufSkoKTtcclxuXHJcbi8qKlxyXG4gKiDnu6fmib9cclxuICovXHJcbnVpbnYuZXh0ZW5kID0gZnVuY3Rpb24gKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XHJcbiAgdmFyIEYgPSBmdW5jdGlvbiAoKSB7XHJcbiAgfSwgY2xvbmVGdW4gPSB1aW52LmNsb25lT2JqO1xyXG4gIEYucHJvdG90eXBlID0gc3VwZXJDbGFzcy5wcm90b3R5cGU7XHJcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gbmV3IEYoKTtcclxuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcclxuICBzdWJDbGFzcy5zdXBlcmNsYXNzID0gc3VwZXJDbGFzcy5wcm90b3R5cGU7XHJcbiAgaWYgKHN1cGVyQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID09PSBPYmplY3QucHJvdG90eXBlLmNvbnN0cnVjdG9yKSB7XHJcbiAgICBzdXBlckNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1cGVyQ2xhc3M7XHJcbiAgfVxyXG4gIGlmICghc3ViQ2xhc3MucHJvdG90eXBlLl9fZXh0ZW5kTGlzdCkge1xyXG4gICAgc3ViQ2xhc3MucHJvdG90eXBlLl9fZXh0ZW5kTGlzdCA9IFtdO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBzdWJDbGFzcy5wcm90b3R5cGUuX19leHRlbmRMaXN0ID0gY2xvbmVGdW4oc3ViQ2xhc3MucHJvdG90eXBlLl9fZXh0ZW5kTGlzdCk7XHJcbiAgfVxyXG4gIHN1YkNsYXNzLnByb3RvdHlwZS5fX2V4dGVuZExpc3QucHVzaChzdXBlckNsYXNzKTtcclxufTtcclxuXHJcbi8qXHJcbiAqIOWkmumHjee7p+aJv1xyXG4gKiDlr7nkuo7lrZDnsbvlkozniLbnsbvph43lpI3nmoTmiJDlkZgs5Lya5Y+W5a2Q57G755qE5oiQ5ZGYXHJcbiAqIOWvueS6jueItuexu+mHjeWkjeeahOaIkOWRmCzkvJrlj5bmnIDlkI7kuIDkuKrniLbnsbvnmoTmiJDlkZhcclxuICog5aaC5p6c5L2/55SoIGluc3RhbmNlb2Yg5Lya5ZKM56ys5LiA5Liq54i257G755qE5oiQ5ZGY5Yy56YWNXHJcbiAqL1xyXG51aW52Lm11bHRpRXh0ZW5kID0gZnVuY3Rpb24gKHN1YkNsYXNzLCBzdXBlckNsYXNzZXMsIHJlcGxlY2VFeGlzdGVkTWVtYmVyKSB7XHJcbiAgaWYgKHJlcGxlY2VFeGlzdGVkTWVtYmVyID09PSB1bmRlZmluZWQpIHJlcGxlY2VFeGlzdGVkTWVtYmVyID0gdHJ1ZTtcclxuICB1aW52LmV4dGVuZChzdWJDbGFzcywgc3VwZXJDbGFzc2VzWzBdKTtcclxuXHJcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBzdXBlckNsYXNzZXMubGVuZ3RoOyBpKyspIHtcclxuICAgIHZhciBjdXJTdXBlckNsYXNzID0gc3VwZXJDbGFzc2VzW2ldO1xyXG4gICAgZm9yICh2YXIgY3VyIGluIGN1clN1cGVyQ2xhc3MucHJvdG90eXBlKSB7XHJcbiAgICAgIGlmIChjdXIgPT0gJ2NvbnN0cnVjdG9yJykgY29udGludWU7XHJcbiAgICAgIGlmIChyZXBsZWNlRXhpc3RlZE1lbWJlcikge1xyXG4gICAgICAgIHN1YkNsYXNzLnByb3RvdHlwZVtjdXJdID0gY3VyU3VwZXJDbGFzcy5wcm90b3R5cGVbY3VyXTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBpZiAoc3ViQ2xhc3MucHJvdG90eXBlW2N1cl0gPT09IHVuZGVmaW5lZCB8fCBzdWJDbGFzcy5wcm90b3R5cGVbY3VyXSA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgc3ViQ2xhc3MucHJvdG90eXBlW2N1cl0gPSBjdXJTdXBlckNsYXNzLnByb3RvdHlwZVtjdXJdO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgc3ViQ2xhc3MucHJvdG90eXBlLl9fZXh0ZW5kTGlzdC5wdXNoKGN1clN1cGVyQ2xhc3MpO1xyXG4gIH1cclxufTtcclxuXHJcbnVpbnYuaW5zdGFuY2VPZiA9IHVpbnYuaXNJbnN0YW5jZSA9IGZ1bmN0aW9uIChzdWJDbGFzcywgc3VwZXJDbGFzcykge1xyXG4gIGlmIChzdWJDbGFzcyBpbnN0YW5jZW9mIHN1cGVyQ2xhc3MpIHtcclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH1cclxuICBpZiAoc3ViQ2xhc3MgJiYgc3ViQ2xhc3MuX19leHRlbmRMaXN0KSB7XHJcbiAgICBpZiAoc3ViQ2xhc3MuX19leHRlbmRMaXN0LmluY2x1ZGVzKHN1cGVyQ2xhc3MpKSB7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gZmFsc2U7XHJcbn07XHJcblxyXG4vKipcclxuICog5LiA5Liq56m65Ye95pWwXHJcbiAqL1xyXG51aW52Lm5vb3AgPSBmdW5jdGlvbiAoKSB7XHJcbn07XHJcblxyXG4vKipcclxuICog6K6h566X6KGo6L6+5byP55qE5YC877yM5pu/5LujZXZhbOWHveaVsFxyXG4gKiBAYXV0aG9yIGp3XHJcbiAqIEBkYXRlIDIwMTctMDUtMjJcclxuICovXHJcbnVpbnYuZXZhbCA9IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgdmFyIEZuID0gRnVuY3Rpb247IC8vIOS4gOS4quWPmOmHj+aMh+WQkUZ1bmN0aW9u77yM6Ziy5q2i5pyJ5Lqb5YmN56uv57yW6K+R5bel5YW35oql6ZSZXHJcbiAgcmV0dXJuIG5ldyBGbigncmV0dXJuICcgKyBkYXRhKSgpO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOWwhuWtl+espuS4sui9rOaNouS4umpzb27lr7nosaFcclxuICovXHJcbnVpbnYuanNvblBhcnNlID0gZnVuY3Rpb24gKHMsIHJldml2ZXIpIHtcclxuICBpZiAoIXMgfHwgISh0eXBlb2YgcyA9PT0gJ3N0cmluZycpKSB7XHJcbiAgICByZXR1cm4gcztcclxuICB9XHJcbiAgdmFyIGpzb247XHJcbiAgdHJ5IHtcclxuICAgIGpzb24gPSBKU09OLnBhcnNlKHMsIHJldml2ZXIpO1xyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGpzb24gPSB1aW52LmV2YWwoJygnICsgcyArICcpJyk7Ly8g5Li76KaB55So5p2l5aSE55CG5bimZnVuY3Rpb27nmoTlrZfnrKbkuLJcclxuICAgIH0gY2F0Y2ggKGUyKSB7XHJcbiAgICAgIGpzb24gPSBzO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4ganNvbjtcclxufTtcclxuXHJcbi8qKlxyXG4gKiDovazmjaJqc29u5a+56LGh5Li65a2X56ym5LiyXHJcbiAqIEBhdXRob3IgandcclxuICogQGRhdGUgMjAxNy0wNS0xOFxyXG4gKi9cclxudWludi5zdHJpbmdpZnkgPSBmdW5jdGlvbiAodiwgcmVwbGFjZXIsIHNwYWNlKSB7XHJcbiAgaWYgKCF2IHx8ICEodHlwZW9mIHYgPT09ICdvYmplY3QnKSkge1xyXG4gICAgcmV0dXJuIHY7XHJcbiAgfVxyXG4gIHJldHVybiBKU09OLnN0cmluZ2lmeSh2LCByZXBsYWNlciwgc3BhY2UpO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOWuieWFqOeahOmaj+acuuaVsFxyXG4gKiBAYXV0aG9yIGp3XHJcbiAqIEBkYXRlIDIwMTctMDYtMDFcclxuICovXHJcbnVpbnYucmFuZG9tID0gKGZ1bmN0aW9uICgpIHtcclxuICB2YXIgc2VlZCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xyXG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XHJcbiAgICBzZWVkID0gKHNlZWQgKiA5MzAxICsgNDkyOTcpICUgMjMzMjgwO1xyXG4gICAgcmV0dXJuIHNlZWQgLyAoMjMzMjgwLjApO1xyXG4gIH07XHJcbn0pKCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB1aW52O1xyXG4iLCJpbXBvcnQgJy4vcG9seWZpbGwnO1xyXG5pbXBvcnQgdWludiBmcm9tICcuL3VpbnYnO1xyXG5pbXBvcnQgdXRpbCBmcm9tICcuL3V0aWwnO1xyXG5pbXBvcnQgaGFzaCBmcm9tICcuL2hhc2gnO1xyXG5cclxudWludi51dGlsID0gdXRpbDtcclxudWludi5oYXNoID0gaGFzaDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHVpbnY7XHJcbiIsIi8vIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xyXG4vLyAgIGlmICh0eXBlb2YgcHJvY2VzcyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHJlcXVpcmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGdsb2JhbCA9PT0gJ29iamVjdCcpIHtcclxuLy8gICAgIHdpbmRvdyA9IGdsb2JhbDtcclxuLy8gICB9IGVsc2Uge1xyXG4vLyAgICAgd2luZG93ID0gdGhpcztcclxuLy8gICB9XHJcbi8vIH1cclxuXHJcbmlmICghT2JqZWN0LnZhbHVlcykge1xyXG4gIE9iamVjdC52YWx1ZXMgPSBmdW5jdGlvbiAob2JqKSB7XHJcbiAgICBpZiAob2JqICE9PSBPYmplY3Qob2JqKSkge1xyXG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QudmFsdWVzIGNhbGxlZCBvbiBhIG5vbi1vYmplY3QnKTtcclxuICAgIH1cclxuICAgIHZhciB2YWwgPSBbXSwga2V5O1xyXG4gICAgZm9yIChrZXkgaW4gb2JqKSB7XHJcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XHJcbiAgICAgICAgdmFsLnB1c2gob2JqW2tleV0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdmFsO1xyXG4gIH07XHJcbn1cclxuLy8gU3RyaW5nIOaJqeWxleWOn+Wei+aWueazlVxyXG5pZiAoIVN0cmluZy5wcm90b3R5cGUuc3RhcnRzV2l0aCkge1xyXG4gIFN0cmluZy5wcm90b3R5cGUuc3RhcnRzV2l0aCA9IGZ1bmN0aW9uIChrKSB7XHJcbiAgICByZXR1cm4gdGhpcy5zdWJzdHJpbmcoMCwgay5sZW5ndGgpID09IGs7XHJcbiAgfTtcclxufVxyXG5pZiAoIVN0cmluZy5wcm90b3R5cGUuZW5kc1dpdGgpIHtcclxuICBTdHJpbmcucHJvdG90eXBlLmVuZHNXaXRoID0gZnVuY3Rpb24gKGspIHtcclxuICAgIHJldHVybiB0aGlzLnN1YnN0cmluZyh0aGlzLmxlbmd0aCAtIGsubGVuZ3RoKSA9PSBrO1xyXG4gIH07XHJcbn1cclxuXHJcbmlmICghU3RyaW5nLnByb3RvdHlwZS50cmltKSB7XHJcbiAgU3RyaW5nLnByb3RvdHlwZS50cmltID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIHRoaXMucmVwbGFjZSgvXlxccyp8XFxzKiQvZywgJycpO1xyXG4gIH07XHJcbn1cclxuaWYgKCFTdHJpbmcucHJvdG90eXBlLmhhc093blByb3BlcnR5KCdyZXBsYWNlQWxsJykpIHtcclxuICAoU3RyaW5nLnByb3RvdHlwZSBhcyBhbnkpLnJlcGxhY2VBbGwgPSBmdW5jdGlvbiAoczEsIHMyKSB7XHJcbiAgICB2YXIgciA9IG5ldyBSZWdFeHAoczEucmVwbGFjZSgvKFtcXChcXClcXFtcXF1cXHtcXH1cXF5cXCRcXCtcXC1cXCpcXD9cXC5cXFwiXFwnXFx8XFwvXFxcXF0pL2csXHJcbiAgICAgICdcXFxcJDEnKSwgJ2lnJyk7XHJcbiAgICByZXR1cm4gdGhpcy5yZXBsYWNlKHIsIHMyKTtcclxuICB9O1xyXG59XHJcblxyXG5pZiAoIVN0cmluZy5wcm90b3R5cGUuaW5jbHVkZXMpIHtcclxuICBTdHJpbmcucHJvdG90eXBlLmluY2x1ZGVzID0gZnVuY3Rpb24gKHNlYXJjaCwgc3RhcnQpIHtcclxuICAgIGlmICh0eXBlb2Ygc3RhcnQgIT09ICdudW1iZXInKSB7XHJcbiAgICAgIHN0YXJ0ID0gMDtcclxuICAgIH1cclxuICAgIGlmIChzdGFydCArIHNlYXJjaC5sZW5ndGggPiB0aGlzLmxlbmd0aCkge1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5pbmRleE9mKHNlYXJjaCwgc3RhcnQpICE9PSAtMTtcclxuICB9O1xyXG59XHJcblxyXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuaW5jbHVkZXNcclxuaWYgKCFBcnJheS5wcm90b3R5cGUuaW5jbHVkZXMpIHtcclxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQXJyYXkucHJvdG90eXBlLCAnaW5jbHVkZXMnLCB7XHJcbiAgICB2YWx1ZTogZnVuY3Rpb24gKHNlYXJjaEVsZW1lbnQsIGZyb21JbmRleCkge1xyXG4gICAgICBpZiAodGhpcyA9PSBudWxsKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJ0aGlzXCIgaXMgbnVsbCBvciBub3QgZGVmaW5lZCcpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyAxLiBMZXQgTyBiZSA/IFRvT2JqZWN0KHRoaXMgdmFsdWUpLlxyXG4gICAgICB2YXIgbyA9IE9iamVjdCh0aGlzKTtcclxuXHJcbiAgICAgIC8vIDIuIExldCBsZW4gYmUgPyBUb0xlbmd0aCg/IEdldChPLCBcImxlbmd0aFwiKSkuXHJcbiAgICAgIHZhciBsZW4gPSBvLmxlbmd0aCA+Pj4gMDtcclxuXHJcbiAgICAgIC8vIDMuIElmIGxlbiBpcyAwLCByZXR1cm4gZmFsc2UuXHJcbiAgICAgIGlmIChsZW4gPT09IDApIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIDQuIExldCBuIGJlID8gVG9JbnRlZ2VyKGZyb21JbmRleCkuXHJcbiAgICAgIC8vICAgIChJZiBmcm9tSW5kZXggaXMgdW5kZWZpbmVkLCB0aGlzIHN0ZXAgcHJvZHVjZXMgdGhlIHZhbHVlIDAuKVxyXG4gICAgICB2YXIgbiA9IGZyb21JbmRleCB8IDA7XHJcblxyXG4gICAgICAvLyA1LiBJZiBuIOKJpSAwLCB0aGVuXHJcbiAgICAgIC8vICBhLiBMZXQgayBiZSBuLlxyXG4gICAgICAvLyA2LiBFbHNlIG4gPCAwLFxyXG4gICAgICAvLyAgYS4gTGV0IGsgYmUgbGVuICsgbi5cclxuICAgICAgLy8gIGIuIElmIGsgPCAwLCBsZXQgayBiZSAwLlxyXG4gICAgICB2YXIgayA9IE1hdGgubWF4KG4gPj0gMCA/IG4gOiBsZW4gLSBNYXRoLmFicyhuKSwgMCk7XHJcblxyXG4gICAgICBmdW5jdGlvbiBzYW1lVmFsdWVaZXJvICh4LCB5KSB7XHJcbiAgICAgICAgcmV0dXJuIHggPT09IHkgfHwgKHR5cGVvZiB4ID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgeSA9PT0gJ251bWJlcicgJiYgaXNOYU4oeCkgJiYgaXNOYU4oeSkpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyA3LiBSZXBlYXQsIHdoaWxlIGsgPCBsZW5cclxuICAgICAgd2hpbGUgKGsgPCBsZW4pIHtcclxuICAgICAgICAvLyBhLiBMZXQgZWxlbWVudEsgYmUgdGhlIHJlc3VsdCBvZiA/IEdldChPLCAhIFRvU3RyaW5nKGspKS5cclxuICAgICAgICAvLyBiLiBJZiBTYW1lVmFsdWVaZXJvKHNlYXJjaEVsZW1lbnQsIGVsZW1lbnRLKSBpcyB0cnVlLCByZXR1cm4gdHJ1ZS5cclxuICAgICAgICBpZiAoc2FtZVZhbHVlWmVybyhvW2tdLCBzZWFyY2hFbGVtZW50KSkge1xyXG4gICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGMuIEluY3JlYXNlIGsgYnkgMS5cclxuICAgICAgICBrKys7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIDguIFJldHVybiBmYWxzZVxyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiDph43lhplOdW1iZXLnmoR0b0ZpeGVk5pa55rOVXHJcbiAqIEBwYXJhbSBkXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqIEBhdXRob3IgbGl1ZmVuZ1xyXG4gKiBAZGF0ZSAxMDE4LTAyLTAxXHJcbiAqL1xyXG4vLyBOdW1iZXIucHJvdG90eXBlLnRvRml4ZWQgPSBmdW5jdGlvbiAoZCkge1xyXG4vLyAgIHZhciBzID0gdGhpcyArICcnO1xyXG4vLyAgIGlmICghZCkgZCA9IDA7XHJcbi8vICAgaWYgKHMuaW5kZXhPZignLicpID09IC0xKSBzICs9ICcuJztcclxuLy8gICBzICs9IG5ldyBBcnJheShkICsgMSkuam9pbignMCcpO1xyXG4vLyAgIGlmIChuZXcgUmVnRXhwKCdeKC18XFxcXCspPyhcXFxcZCsoXFxcXC5cXFxcZHswLCcgKyAoZCArIDEpICsgJ30pPylcXFxcZCokJykudGVzdChzKSkge1xyXG4vLyAgICAgdmFyIHMgPSAnMCcgKyBSZWdFeHAuJDIsIHBtID0gUmVnRXhwLiQxLCBhID0gUmVnRXhwLiQzLmxlbmd0aCwgYiA9IHRydWU7XHJcbi8vICAgICBpZiAoYSA9PSBkICsgMikge1xyXG4vLyAgICAgICBhID0gcy5tYXRjaCgvXFxkL2cpO1xyXG4vLyAgICAgICBpZiAocGFyc2VJbnQoYVthLmxlbmd0aCAtIDFdKSA+IDQpIHtcclxuLy8gICAgICAgICBmb3IgKHZhciBpID0gYS5sZW5ndGggLSAyOyBpID49IDA7IGktLSkge1xyXG4vLyAgICAgICAgICAgYVtpXSA9IHBhcnNlSW50KGFbaV0pICsgMTtcclxuLy8gICAgICAgICAgIGlmIChhW2ldID09IDEwKSB7XHJcbi8vICAgICAgICAgICAgIGFbaV0gPSAwO1xyXG4vLyAgICAgICAgICAgICBiID0gaSAhPSAxO1xyXG4vLyAgICAgICAgICAgfSBlbHNlIGJyZWFrO1xyXG4vLyAgICAgICAgIH1cclxuLy8gICAgICAgfVxyXG4vLyAgICAgICBzID0gYS5qb2luKCcnKS5yZXBsYWNlKG5ldyBSZWdFeHAoJyhcXFxcZCspKFxcXFxkeycgKyBkICsgJ30pXFxcXGQkJyksICckMS4kMicpO1xyXG4vLyAgICAgfVxyXG4vLyAgICAgaWYgKGIpIHMgPSBzLnN1YnN0cigxKTtcclxuLy8gICAgIHJldHVybiAocG0gKyBzKS5yZXBsYWNlKC9cXC4kLywgJycpO1xyXG4vLyAgIH1cclxuLy8gICByZXR1cm4gdGhpcyArICcnO1xyXG4vLyB9O1xyXG5cclxuLy8g6K+05piO77yaSlPml7bpl7REYXRl5qC85byP5YyW5Y+C5pWwXHJcbi8vIOWPguaVsO+8muagvOW8j+WMluWtl+espuS4suWmgu+8mid5eXl5LU1NLWRkIEhIOm1tOnNzJ1xyXG4vLyDnu5PmnpzvvJrlpoIyMDE2LTA2LTAxIDEwOjA5OjAwXHJcbmlmICghKERhdGUucHJvdG90eXBlIGFzIGFueSkuZm9ybWF0KXtcclxuICAoRGF0ZS5wcm90b3R5cGUgYXMgYW55KS5mb3JtYXQgPSBmdW5jdGlvbiAoZm10KSB7XHJcbiAgICB2YXIgbyA9IHtcclxuICAgICAgJ00rJzogdGhpcy5nZXRNb250aCgpICsgMSxcclxuICAgICAgJ2QrJzogdGhpcy5nZXREYXRlKCksXHJcbiAgICAgICdIKyc6IHRoaXMuZ2V0SG91cnMoKSxcclxuICAgICAgJ20rJzogdGhpcy5nZXRNaW51dGVzKCksXHJcbiAgICAgICdzKyc6IHRoaXMuZ2V0U2Vjb25kcygpLFxyXG4gICAgICAncSsnOiBNYXRoLmZsb29yKCh0aGlzLmdldE1vbnRoKCkgKyAzKSAvIDMpLFxyXG4gICAgICAnUyc6IHRoaXMuZ2V0TWlsbGlzZWNvbmRzKClcclxuICAgIH07XHJcbiAgICB2YXIgeWVhciA9IHRoaXMuZ2V0RnVsbFllYXIoKTtcclxuICAgIHZhciB5ZWFyc3RyID0geWVhciArICcnO1xyXG4gICAgeWVhcnN0ciA9IHllYXJzdHIubGVuZ3RoID49IDQgPyB5ZWFyc3RyIDogJzAwMDAnLnN1YnN0cigwLCA0IC0geWVhcnN0ci5sZW5ndGgpICsgeWVhcnN0cjtcclxuXHJcbiAgICBpZiAoLyh5KykvLnRlc3QoZm10KSkge1xyXG4gICAgICBmbXQgPSBmbXQucmVwbGFjZShSZWdFeHAuJDEsICh5ZWFyc3RyICsgJycpLnN1YnN0cig0IC0gUmVnRXhwLiQxLmxlbmd0aCkpO1xyXG4gICAgfVxyXG4gICAgZm9yICh2YXIgayBpbiBvKSB7XHJcbiAgICAgIGlmIChuZXcgUmVnRXhwKCcoJyArIGsgKyAnKScpLnRlc3QoZm10KSkge1xyXG4gICAgICAgIGZtdCA9IGZtdC5yZXBsYWNlKFJlZ0V4cC4kMSwgKFJlZ0V4cC4kMS5sZW5ndGggPT0gMSkgPyAob1trXSkgOiAoKCcwMCcgKyBvW2tdKS5zdWJzdHIoKCcnICsgb1trXSkubGVuZ3RoKSkpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZm10O1xyXG4gIH07XHJcbn1cclxuXHJcbmlmICghT2JqZWN0LnZhbHVlcykge1xyXG4gIE9iamVjdC52YWx1ZXMgPSBmdW5jdGlvbiAob2JqKSB7XHJcbiAgICBpZiAob2JqICE9PSBPYmplY3Qob2JqKSkge1xyXG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QudmFsdWVzIGNhbGxlZCBvbiBhIG5vbi1vYmplY3QnKTtcclxuICAgIH1cclxuICAgIHZhciB2YWwgPSBbXSwga2V5O1xyXG4gICAgZm9yIChrZXkgaW4gb2JqKSB7XHJcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XHJcbiAgICAgICAgdmFsLnB1c2gob2JqW2tleV0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdmFsO1xyXG4gIH07XHJcbn1cclxuXHJcbi8vancgMjAxNy4xMS4wNiDlhbzlrrl3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lXHJcbihmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIGxhc3RUaW1lID0gMDtcclxuICB2YXIgdmVuZG9ycyA9IFsnd2Via2l0JywgJ21veiddO1xyXG4gIGZvciAodmFyIHggPSAwOyB4IDwgdmVuZG9ycy5sZW5ndGggJiYgIXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU7ICsreCkge1xyXG4gICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSA9IHdpbmRvd1t2ZW5kb3JzW3hdICsgJ1JlcXVlc3RBbmltYXRpb25GcmFtZSddO1xyXG4gICAgd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lID0gd2luZG93W3ZlbmRvcnNbeF0gKyAnQ2FuY2VsQW5pbWF0aW9uRnJhbWUnXSB8fCB3aW5kb3dbdmVuZG9yc1t4XSArICdDYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWUnXTtcclxuICB9XHJcblxyXG4gIGlmICghd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSkge1xyXG4gICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xyXG4gICAgICB2YXIgY3VyclRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcclxuICAgICAgdmFyIHRpbWVUb0NhbGwgPSBNYXRoLm1heCgwLCAxNiAtIChjdXJyVGltZSAtIGxhc3RUaW1lKSk7XHJcbiAgICAgIHZhciBpZCA9IHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgIGNhbGxiYWNrKGN1cnJUaW1lICsgdGltZVRvQ2FsbCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICB0aW1lVG9DYWxsKTtcclxuICAgICAgbGFzdFRpbWUgPSBjdXJyVGltZSArIHRpbWVUb0NhbGw7XHJcbiAgICAgIHJldHVybiBpZDtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBpZiAoIXdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSkge1xyXG4gICAgd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lID0gZnVuY3Rpb24gKGlkKSB7XHJcbiAgICAgIGNsZWFyVGltZW91dChpZCk7XHJcbiAgICB9O1xyXG4gIH1cclxufSkoKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IE9iamVjdDtcclxuIiwiaW1wb3J0IHVpbnYgZnJvbSAnLi91aW52JztcclxuaW1wb3J0IGhhc2ggZnJvbSAnLi9oYXNoJztcclxuXHJcbmNvbnN0IHV0aWw6IGFueSA9IHt9O1xyXG5cclxuLyoqXHJcbiAqIOiKgua1geWZqFxyXG4gKiBAYXV0aG9yIGp3XHJcbiAqIEBkYXRlIDIwMTctMTEtMjlcclxuICovXHJcbi8vIHV0aWwudGhyb3R0bGUgPSAoZnVuY3Rpb24gKCkge1xyXG4vLyAgIHZhciBtYXAgPSB7fTtcclxuLy8gICB2YXIgdGhyb3R0bGUgPSBmdW5jdGlvbiAoKSB7XHJcbi8vICAgICAvL+iOt+WPluesrOS4gOS4quWPguaVsFxyXG4vLyAgICAgdmFyIGlzQ2xlYXIgPSBhcmd1bWVudHNbMF0sIGZuLCBfdGhyb3R0bGVJRDtcclxuLy8gICAgIC8v5aaC5p6c56ys5LiA5Liq5Y+C5pWw5pivYm9vbGVhbuexu+Wei+mCo+S5iOesrOS4gOS4quWPguaVsOWImeihqOekuuaYr+WQpua4hemZpOiuoeaXtuWZqFxyXG4vLyAgICAgaWYgKHR5cGVvZiBpc0NsZWFyID09PSAnYm9vbGVhbicpIHtcclxuLy8gICAgICAgLy/nrKzkuozkuKrlj4LmlbDkuLppZFxyXG4vLyAgICAgICB2YXIgaWQgPSBhcmd1bWVudHNbMV07XHJcbi8vICAgICAgIF90aHJvdHRsZUlEID0gbWFwW2lkXTtcclxuLy8gICAgICAgaWYgKF90aHJvdHRsZUlEKSB7XHJcbi8vICAgICAgICAgY2xlYXJUaW1lb3V0KF90aHJvdHRsZUlEKTtcclxuLy8gICAgICAgICBkZWxldGUgbWFwW2lkXTtcclxuLy8gICAgICAgfVxyXG4vLyAgICAgICAvL+mAmui/h+iuoeaXtuWZqOW7tui/n+WHveaVsOeahOaJp+ihjFxyXG4vLyAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgLy/nrKzkuIDkuKrlj4LmlbDkuLrlh73mlbBcclxuLy8gICAgICAgZm4gPSBpc0NsZWFyO1xyXG4vLyAgICAgICAvL+esrOS6jOS4quWPguaVsOS4uuWHveaVsOaJp+ihjOaXtueahOWPguaVsFxyXG4vLyAgICAgICB2YXIgcGFyYW0gPSBhcmd1bWVudHNbMV07XHJcbi8vICAgICAgIC8v5a+55omn6KGM5pe255qE5Y+C5pWw6YCC6YWN6buY6K6k5YC877yM6L+Z6YeM5oiR5Lus55So5Yiw5Lul5YmN5a2m6L+H55qEZXh0ZW5k5pa55rOVXHJcbi8vICAgICAgIHZhciBwID0gaGFzaC5jb21iaW5lKHtcclxuLy8gICAgICAgICBpZDogJ3Rocm90dGxlX2lkJywgLy/lop7liqDkuIDkuKppZO+8jOeUqOadpeiOt+WPlnNldFRpbWVvdXTnmoRpZFxyXG4vLyAgICAgICAgIGNvbnRleHQ6IG51bGwsIC8v5L2c55So5Z+fXHJcbi8vICAgICAgICAgYXJnczogW10sIC8v55u45YWz5Y+C5pWwXHJcbi8vICAgICAgICAgdGltZTogMzAwLy/lu7bov5/miafooYznmoTml7bpl7RcclxuLy8gICAgICAgfSwgcGFyYW0pO1xyXG4vLyAgICAgICB0aHJvdHRsZSh0cnVlLCBwLmlkKTsvL+a4hemZpOiuoeaXtuWZqFxyXG4vLyAgICAgICBfdGhyb3R0bGVJRCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4vLyAgICAgICAgIC8v5omn6KGM5Ye95pWwXHJcbi8vICAgICAgICAgZm4uYXBwbHkocC5jb250ZXh0LCBwLmFyZ3MpO1xyXG4vLyAgICAgICB9LCBwLnRpbWUpO1xyXG4vLyAgICAgICBtYXBbcC5pZF0gPSBfdGhyb3R0bGVJRDtcclxuLy8gICAgIH1cclxuLy8gICB9O1xyXG4vLyAgIHJldHVybiB0aHJvdHRsZTtcclxuLy8gfSkoKTtcclxuXHJcbi8qKlxyXG4gKiDkuLrlsZ7mgKfop6PmnpDot6/lvoRcclxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWUg6ZyA6KaB6Kej5p6Q55qE6Lev5b6EXHJcbiAqIEByZXR1cm4ge0FycmF5fSDop6PmnpDlkI7nmoTot6/lvoRcclxuICogQGV4YW1wbGUgdXRpbC5fcGFyc2VQYXRoRm9yQXR0cmlidXRlKHBhdGgpO1xyXG4gKi9cclxudXRpbC5fcGFyc2VQYXRoRm9yQXR0cmlidXRlID0gZnVuY3Rpb24gKG5hbWUpIHtcclxuICBpZiAodHlwZW9mIG5hbWUgPT09ICdzdHJpbmcnKSB7XHJcbiAgICBpZiAobmFtZS5pbmRleE9mKCcvJykgIT0gLTEpIHtcclxuICAgICAgbmFtZSA9IG5hbWUuc3BsaXQoJy8nKTtcclxuICAgIH0gZWxzZSBpZiAobmFtZS5pbmRleE9mKCdcXFxcJykgIT0gLTEpIHtcclxuICAgICAgbmFtZSA9IG5hbWUuc3BsaXQoJ1xcXFwnKTtcclxuICAgIH1cclxuICAgIGlmICh0eXBlb2YgbmFtZSA9PSAnc3RyaW5nJykge1xyXG4gICAgICByZXR1cm4gW25hbWVdO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5hbWU7XHJcbiAgfVxyXG4gIHJldHVybiBuYW1lO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOiOt+WPluWxnuaAp1xyXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqIOWvueixoVxyXG4gKiBAcGFyYW0ge1N0cmluZ30gcGF0aCDot6/lvoRcclxuICogQHJldHVybiB7T2JqZWN0fSDlsZ7mgKflgLxcclxuICovXHJcbnV0aWwuZ2V0QXR0cmlidXRlID0gZnVuY3Rpb24gKG9iaiwgcGF0aCkge1xyXG4gIHBhdGggPSB1dGlsLl9wYXJzZVBhdGhGb3JBdHRyaWJ1dGUocGF0aCk7XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBpZiAoIW9iaikgcmV0dXJuIHVuZGVmaW5lZDtcclxuICAgIG9iaiA9IG9ialtwYXRoW2ldXTtcclxuICB9XHJcbiAgcmV0dXJuIG9iajtcclxufTtcclxuXHJcbi8qKlxyXG4gKiDorr7nva7lsZ7mgKdcclxuICogQHBhcmFtIHtPYmplY3R9IG9iaiDlr7nosaFcclxuICogQHBhcmFtIHtTdHJpbmd9IHBhdGgg6Lev5b6EXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSB2YWx1ZSDorr7nva7nmoTlsZ7mgKflgLxcclxuICovXHJcbnV0aWwuc2V0QXR0cmlidXRlID0gZnVuY3Rpb24gKG9iaiwgcGF0aCwgdmFsdWUpIHtcclxuICBwYXRoID0gdXRpbC5fcGFyc2VQYXRoRm9yQXR0cmlidXRlKHBhdGgpO1xyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGggLSAxOyBpKyspIHtcclxuICAgIHZhciBjdXIgPSBwYXRoW2ldO1xyXG4gICAgaWYgKCFvYmpbY3VyXSkgb2JqW2N1cl0gPSB7fTtcclxuICAgIG9iaiA9IG9ialtjdXJdO1xyXG4gIH1cclxuICBvYmpbcGF0aFtwYXRoLmxlbmd0aCAtIDFdXSA9IHZhbHVlO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOWIoOmZpOWxnuaAp1xyXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBwYXRoXHJcbiAqL1xyXG51dGlsLmRlbEF0dHJpYnV0ZSA9IGZ1bmN0aW9uIChvYmosIHBhdGgpIHtcclxuICBwYXRoID0gdXRpbC5fcGFyc2VQYXRoRm9yQXR0cmlidXRlKHBhdGgpO1xyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGggLSAxOyBpKyspIHtcclxuICAgIHZhciBjdXIgPSBwYXRoW2ldO1xyXG4gICAgaWYgKCFvYmpbY3VyXSkgb2JqW2N1cl0gPSB7fTtcclxuICAgIG9iaiA9IG9ialtjdXJdO1xyXG4gIH1cclxuICBkZWxldGUgb2JqW3BhdGhbcGF0aC5sZW5ndGggLSAxXV07XHJcbn07XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8qKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gb3BGaWxlbmFtZVxyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAqL1xyXG51dGlsLmZpbGVuYW1lRnJvbVBhdGggPSBmdW5jdGlvbiAob3BGaWxlbmFtZSkge1xyXG4gIG9wRmlsZW5hbWUgPSBvcEZpbGVuYW1lLnJlcGxhY2VBbGwoJy8nLCAnXFxcXCcpO1xyXG4gIHZhciBwb3MgPSBvcEZpbGVuYW1lLmxhc3RJbmRleE9mKCdcXFxcJyk7XHJcbiAgaWYgKHBvcyA9PSAtMSkge1xyXG4gICAgcmV0dXJuIG9wRmlsZW5hbWU7XHJcbiAgfVxyXG4gIHJldHVybiBvcEZpbGVuYW1lLnN1YnN0cmluZyhwb3MgKyAxLCBvcEZpbGVuYW1lLmxlbmd0aCk7XHJcbn07XHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLyoqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBvcEZpbGVuYW1lXHJcbiAqIEByZXR1cm4ge3N0cmluZ31cclxuICovXHJcbnV0aWwuZ2V0RmlsZW5hbWVQYXRoID0gZnVuY3Rpb24gKG9wRmlsZW5hbWUpIHtcclxuICB2YXIgcG9zID0gb3BGaWxlbmFtZS5sYXN0SW5kZXhPZignXFxcXCcpO1xyXG4gIGlmIChwb3MgPT0gLTEpIHtcclxuICAgIHBvcyA9IG9wRmlsZW5hbWUubGFzdEluZGV4T2YoJy8nKTtcclxuICB9XHJcbiAgaWYgKHBvcyA9PSAtMSkge1xyXG4gICAgcmV0dXJuIG9wRmlsZW5hbWU7XHJcbiAgfVxyXG4gIHJldHVybiBvcEZpbGVuYW1lLnN1YnN0cmluZygwLCBwb3MgKyAxKTtcclxufTtcclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vKipcclxuICogQHBhcmFtIHtzdHJpbmd9IG9wRmlsZW5hbWVcclxuICogQHJldHVybiB7c3RyaW5nfVxyXG4gKi9cclxudXRpbC5nZXRGaWxlbmFtZUZpbGUgPSBmdW5jdGlvbiAob3BGaWxlbmFtZSkge1xyXG4gIHZhciBmaWxlbmFtZSA9IHV0aWwuZmlsZW5hbWVGcm9tUGF0aChvcEZpbGVuYW1lKTtcclxuICB2YXIgcG9zID0gZmlsZW5hbWUubGFzdEluZGV4T2YoJy4nKTtcclxuICBpZiAocG9zID09IC0xKSB7XHJcbiAgICByZXR1cm4gZmlsZW5hbWU7XHJcbiAgfVxyXG4gIHJldHVybiBmaWxlbmFtZS5zdWJzdHJpbmcoMCwgcG9zKTtcclxufTtcclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vKipcclxuICogQHBhcmFtIHtzdHJpbmd9IG9wRmlsZW5hbWVcclxuICogQHJldHVybiB7c3RyaW5nfVxyXG4gKi9cclxudXRpbC5nZXRGaWxlbmFtZVR5cGUgPSBmdW5jdGlvbiAob3BGaWxlbmFtZSkge1xyXG4gIHZhciBwb3MgPSBvcEZpbGVuYW1lLmxhc3RJbmRleE9mKCcuJyk7XHJcbiAgaWYgKHBvcyA9PSAtMSkge1xyXG4gICAgcmV0dXJuICcnO1xyXG4gIH1cclxuICByZXR1cm4gb3BGaWxlbmFtZS5zdWJzdHJpbmcocG9zLCBvcEZpbGVuYW1lLmxlbmd0aCk7XHJcbn07XHJcblxyXG4vKiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4gKlxyXG4gKiDmlbDnu4TovoXliqnlt6XlhbdcclxuICpcclxuICovXHJcblxyXG4vKipcclxuICog5Zyo5pWw57uE5Lit5Y676Zmk6YeN5aSN6aG5XHJcbiAqIEBwYXJhbSB7QXJyYXl9IHJlc3VsdHMg5Y6f5aeL5pWw57uEXHJcbiAqIEBwYXJhbSB7Qm9vbGVhbn0ga2VlcEZpcnN0IGJvb2xlYW7vvIzmmK/lkKbkv53nlZnnrKzkuIDkuKrph43lpI3lgLxcclxuICogQHJldHVybiB7QXJyYXl9IOWIoOmZpOS6humHjeWkjemhueeahOaVsOe7hFxyXG4gKiBAZXhhbXBsZSB1dGlsLnVuaXF1ZShyZXN1bHQpO1xyXG4gKi9cclxudXRpbC51bmlxdWUgPSBmdW5jdGlvbiAocmVzdWx0cywga2VlcEZpcnN0KSB7XHJcbiAgdmFyIGRlbExpc3QgPSBbXTtcclxuXHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXN1bHRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBmb3IgKHZhciBpaSA9IGkgKyAxOyBpaSA8IHJlc3VsdHMubGVuZ3RoOyBpaSsrKSB7XHJcbiAgICAgIGlmIChyZXN1bHRzW2ldID09IHJlc3VsdHNbaWldKSB7XHJcbiAgICAgICAgaWYgKGtlZXBGaXJzdCkgdXRpbC5hZGROZXdJdGVtVG9BcnJheShpaSwgZGVsTGlzdCk7XHJcbiAgICAgICAgZWxzZSB1dGlsLmFkZE5ld0l0ZW1Ub0FycmF5KGksIGRlbExpc3QpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB1dGlsLmRlbEl0ZW1zQnlJbmRleEFycmF5KHJlc3VsdHMsIGRlbExpc3QpO1xyXG4gIHJldHVybiByZXN1bHRzO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOa4heepuuaVsOe7hOS4reepuuWFg+e0oFxyXG4gKiBAcGFyYW0ge0FycmF5fSBvcEFycmF5XHJcbiAqIEByZXR1cm4ge0FycmF5fVxyXG4gKi9cclxudXRpbC5jbGVhckVtcHR5SXRlbUluQXJyYXkgPSBmdW5jdGlvbiAob3BBcnJheSkge1xyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgb3BBcnJheS5sZW5ndGg7IGkrKykge1xyXG4gICAgaWYgKHR5cGVvZiBvcEFycmF5W2ldID09PSAndW5kZWZpbmVkJyB8fCBvcEFycmF5W2ldID09ICcnKSB7XHJcbiAgICAgIG9wQXJyYXkuc3BsaWNlKGksIDEpO1xyXG4gICAgICBpIC09IDE7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBvcEFycmF5O1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOWcqOaVsOe7hOacq+Wwvua3u+WKoOWFg+e0oCDlpoLmnpzmnIks5YiZ6L+U5Zue5L2N572uO+WmguaenOaYr+aWsOa3u+WKoCzliJnov5Tlm57mlrDmlbDnu4Tplb/luqZcclxuICogQHBhcmFtIHtTdHJpbmd9IG9wVmFsdWUg6KaB5re75Yqg55qE5YWD57SgXHJcbiAqIEBwYXJhbSB7QXJyYXl9IG9wQXJyYXkg5a+56LGh5pWw57uEXHJcbiAqIEByZXR1cm4ge1N0cmluZ30gIOaVsOe7hOS4reacieivpeWFg+e0oOWImei/lOWbnuivpeWFg+e0oOeahOS9jee9ru+8jOWQpuWImei/lOWbnuaWsOaVsOe7hOmVv+W6plxyXG4gKi9cclxudXRpbC5hZGROZXdJdGVtVG9BcnJheSA9IGZ1bmN0aW9uIChvcFZhbHVlLCBvcEFycmF5KSB7XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBvcEFycmF5Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICBpZiAob3BBcnJheVtpXSA9PSBvcFZhbHVlKSB7XHJcbiAgICAgIHJldHVybiBpO1xyXG4gICAgfVxyXG4gIH1cclxuICBvcEFycmF5LnB1c2gob3BWYWx1ZSk7XHJcbiAgcmV0dXJuIG9wQXJyYXkubGVuZ3RoO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOWQkeaVsOe7hOS4reaPkuWFpeWFg+e0oFxyXG4gKiBAcGFyYW0ge1N0cmluZ30gb3BWYWx1ZSAg5o+S5YWl55qE5YWD57SgXHJcbiAqIEBwYXJhbSB7QXJyYXl9IG9wQXJyYXkgIOaPkuWFpeeahOWvueixoeaVsOe7hFxyXG4gKiBAcGFyYW0ge1N0cmluZ30gaW5kZXggICAg5o+S5YWl55qE5L2N572uXHJcbiAqIEByZXR1cm4ge0FycmF5fSDmlrDmlbDnu4RcclxuICovXHJcbnV0aWwuaW5zZXJ0SXRlbVRvQXJyYXkgPSBmdW5jdGlvbiAob3BWYWx1ZSwgb3BBcnJheSwgaW5kZXgpIHtcclxuICBvcEFycmF5LnNwbGljZShpbmRleCwgMCwgb3BWYWx1ZSk7XHJcbiAgcmV0dXJuIG9wQXJyYXk7XHJcbn07XHJcblxyXG4vKipcclxuICog6I635Y+W5Lik5Liq5pWw57uE5Lit55u45ZCM55qE5YWD57SgXHJcbiAqIEBwYXJhbSB7QXJyYXl9IG9wQXJyYXlBIOaVsOe7hDFcclxuICogQHBhcmFtIHtBcnJheX0gb3BBcnJheUIg5pWw57uEMlxyXG4gKiBAcmV0dXJuIHtTdHJpbmd9ICDmlbDnu4TkuK3nm7jlkIznmoTlhYPntKBcclxuICovXHJcbnV0aWwuZ2V0Q29uY29taXRhbmNlQmV0d2VlbkFycmF5cyA9IGZ1bmN0aW9uIChvcEFycmF5QSwgb3BBcnJheUIpIHtcclxuICB2YXIgcmVzdWx0ID0gW107XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBvcEFycmF5QS5sZW5ndGg7IGkrKykge1xyXG4gICAgdmFyIGl0ZW1BID0gb3BBcnJheUFbaV07XHJcbiAgICBpZiAodXRpbC5maW5kSXRlbUluQXJyYXkob3BBcnJheUIsIGl0ZW1BKSAhPSAtMSkge1xyXG4gICAgICB1dGlsLmFkZE5ld0l0ZW1Ub0FycmF5KGl0ZW1BLCByZXN1bHQpO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gcmVzdWx0O1xyXG59O1xyXG5cclxuLy9hcnJheSDmnIkgY29uY2F0IOeahOaWueazlSzkvYbkuI3og73nm7TmjqXlsIbmupDmlbDmja7mlLnlj5hcclxuLyoqXHJcbiAqIOmTvuaOpeS4pOS4quaVsOe7hCDmiorkuKTkuKrmlbDnu4TlkIjmiJDkuIDkuKrmlbDnu4Qs55u45ZCM5YWD57Sg5Lya5YiG5Yir5L+d55WZLOS4pOS4quW/hemhu+aYr+aVsOe7hCzkuI3og73kuIDkuKrmlbDnu4TkuIDkuKrlrZfnrKbkuLJcclxuICogQHBhcmFtIHtBcnJheX0gb3BBcnJheUEgIOaVsOe7hDFcclxuICogQHBhcmFtIHtBcnJheX0gb3BBcnJheUIgIOaVsOe7hDJcclxuICogQHBhcmFtIHtCb29sZWFufSByZXR1cm5OZXcgIOaYr+WQpui/lOWbnuaWsOaVsOe7hFxyXG4gKiBAcmV0dXJuIHtBcnJheX0g5paw5pWw57uEXHJcbiAqL1xyXG51dGlsLm1lcmdlQXJyYXlzID0gZnVuY3Rpb24gKG9wQXJyYXlBLCBvcEFycmF5QiwgcmV0dXJuTmV3KSB7XHJcbiAgaWYgKHJldHVybk5ldykge1xyXG4gICAgcmV0dXJuIG9wQXJyYXlBLmNvbmNhdChvcEFycmF5Qik7XHJcbiAgfVxyXG5cclxuICBmb3IgKHZhciBpID0gMDsgaSA8IG9wQXJyYXlCLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBvcEFycmF5QS5wdXNoKG9wQXJyYXlCW2ldKTtcclxuICB9XHJcbiAgcmV0dXJuIG9wQXJyYXlBO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOW+gOaVsOe7hEHkuK3lkIjlubblhaXmlbBC77yM5pyJ5YiZ5LiN5o+S5YWl77yM6L+U5Zue6ZW/5aSn55qEQeOAguatpOS4vuS4jeS8muWOu+mZpEHkuK3ph43lpI3lhYPntKBcclxuICogQGF1dGhvciBqd1xyXG4gKiBAZGF0ZSAyMDE3LTA3LTE5XHJcbiAqL1xyXG51dGlsLmNvbmNhdEFycmF5cyA9IGZ1bmN0aW9uIChvcEFycmF5QSwgb3BBcnJheUIpIHtcclxuICBmb3IgKHZhciBpID0gMDsgaSA8IG9wQXJyYXlCLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBpZiAob3BBcnJheUEuaW5kZXhPZihvcEFycmF5QltpXSkgPT0gLTEpIHtcclxuICAgICAgb3BBcnJheUEucHVzaChvcEFycmF5QltpXSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBvcEFycmF5QTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiDmtojlh4/mlbDnu4Qs5LuOQeS4reWOu+mZpOS4jkLph43lpI3nmoTlhYPntKBcclxuICogQHBhcmFtIHtBcnJheX0gb3BBcnJheUEgIOWOn+Wni+aVsOe7hFxyXG4gKiBAcGFyYW0ge0FycmF5fSBvcEFycmF5QiAg5qCh5qC35pWw57uEXHJcbiAqIEByZXR1cm4ge0Jvb2xlYW59IOi/lOWbnuaWsOaVsOe7hFxyXG4gKi9cclxudXRpbC5zdWJ0cmFjdEFycmF5cyA9IGZ1bmN0aW9uIChvcEFycmF5QSwgb3BBcnJheUIpIHtcclxuICB2YXIgcmVzdWx0ID0gW107XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBvcEFycmF5QS5sZW5ndGg7IGkrKykge1xyXG4gICAgdmFyIGl0ZW1BID0gb3BBcnJheUFbaV07XHJcbiAgICBpZiAodXRpbC5maW5kSXRlbUluQXJyYXkob3BBcnJheUIsIGl0ZW1BKSA9PSAtMSkge1xyXG4gICAgICB1dGlsLmFkZE5ld0l0ZW1Ub0FycmF5KGl0ZW1BLCByZXN1bHQpO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gcmVzdWx0O1xyXG59O1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vKipcclxuICog5pWw57uE5o6S5bqPLOWNh+W6j1xyXG4gKiBAcGFyYW0ge0FycmF5fSBhXHJcbiAqIEBwYXJhbSB7QXJyYXl9IGJcclxuICogQHJldHVybiB7QXJyYXl9XHJcbiAqL1xyXG51dGlsLl9BcnJheVNvcnRfVXAgPSBmdW5jdGlvbiAoYSwgYikge1xyXG4gIHJldHVybiBhIC0gYjtcclxufTtcclxuLyoqXHJcbiAqIOaVsOe7hOaOkuW6jyzpmY3luo9cclxuICogQHBhcmFtIHtBcnJheX0gYVxyXG4gKiBAcGFyYW0ge0FycmF5fSBiXHJcbiAqIEByZXR1cm4ge0FycmF5fVxyXG4gKi9cclxudXRpbC5fQXJyYXlTb3J0X0Rvd24gPSBmdW5jdGlvbiAoYSwgYikge1xyXG4gIHJldHVybiBiIC0gYTtcclxufTtcclxuLyoqXHJcbiAqIOagueaNruS9jee9ruW6j+WIl+WIoOmZpOaVsOe7hOWFg+e0oFxyXG4gKiBAcGFyYW0ge0FycmF5fSBvcEEg5pWw57uEXHJcbiAqIEBwYXJhbSB7QXJyYXl9IG9wSUEg5bqP5YiX5pWw57uEXHJcbiAqL1xyXG51dGlsLmRlbEl0ZW1zQnlJbmRleEFycmF5ID0gZnVuY3Rpb24gKG9wQSwgb3BJQSkge1xyXG4gIG9wSUEuc29ydCh1dGlsLl9BcnJheVNvcnRfRG93bik7XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBvcElBLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBvcEEuc3BsaWNlKG9wSUFbaV0sIDEpO1xyXG4gIH1cclxufTtcclxuXHJcbi8qKlxyXG4gKiDku47mlbDnu4TkuK3liKDpmaTmjIflrprlhYPntKAs5aaC5p6c5oyH5a6a5YWD57Sg5pyJ5aSa5LiqLOS5n+WPquaYr+WIoOmZpOacgOWJjemdoueahOS4gOS4qlxyXG4gKiBAcGFyYW0ge0FycmF5fSBvcEEgIOWvueixoeaVsOe7hFxyXG4gKiBAcGFyYW0ge1N0cmluZ30gb3BJdGVtICDopoHliKDpmaTnmoTlhYPntKBcclxuICovXHJcbnV0aWwuZGVsRmlyc3RJdGVtRnJvbUFycmF5ID0gZnVuY3Rpb24gKG9wQSwgb3BJdGVtKSB7XHJcbiAgdmFyIHBvcyA9IHV0aWwuZmluZEl0ZW1JbkFycmF5KG9wQSwgb3BJdGVtKTtcclxuICBpZiAocG9zICE9IC0xKSB7XHJcbiAgICBvcEEuc3BsaWNlKHBvcywgMSk7XHJcbiAgfVxyXG59O1xyXG5cclxuLyoqXHJcbiAqIOagueaNrmtleeWAvO+8jOS7juaVsOe7hOS4reWPluWHuuWvueW6lOeahOaVsOe7hFxyXG4gKiBAcGFyYW0ge0FycmF5fSBvcEEg5rqQ5pWw57uEXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBrZXkg6KaB5Y+W55qE6ZSu5YC8XHJcbiAqIEByZXR1cm4ge0FycmF5fSBbWFgsWFhdXHJcbiAqIEBhdXRob3IgandcclxuICogQGRhdGUgMjAxNy0wNy0wN1xyXG4gKi9cclxudXRpbC5nZXRJdGVtc0Zyb21BcnJheUJ5S2V5ID0gZnVuY3Rpb24gKG9wQSwga2V5KSB7XHJcbiAgaWYgKCEob3BBIGluc3RhbmNlb2YgQXJyYXkpKSBvcEEgPSBbb3BBXTtcclxuICB2YXIgdmFsdWVzID0gW107XHJcbiAgb3BBLm1hcChmdW5jdGlvbiAob2JqKSB7XHJcbiAgICBpZiAob2JqICYmIG9ialtrZXldKSB7XHJcbiAgICAgIHZhbHVlcy5wdXNoKG9ialtrZXldKTtcclxuICAgIH1cclxuICB9KTtcclxuICByZXR1cm4gdmFsdWVzO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOagueaNrmtleXPlgLzvvIzku47mlbDnu4TkuK3lj5blh7rlr7nlupTnmoTmlbDnu4RcclxuICogQHBhcmFtIHtBcnJheX0gb3BBIOa6kOaVsOe7hFxyXG4gKiBAcGFyYW0ge0FycmF5fSBrZXlzIOimgeWPlueahOmUruWAvOaVsOe7hFxyXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGlzQWxsb3dOdWxsIOaYr+WQpuWFgeiuuOWAvOS4uuepuu+8jOm7mOiupOS4jeWFgeiuuFxyXG4gKiBAcmV0dXJuIHtBcnJheX0gW3trZXkxOlhYLGtleTI6WFh9LHtrZXkxOlhYLGtleTI6WFh9XVxyXG4gKiBAYXV0aG9yIGp3XHJcbiAqIEBkYXRlIDIwMTctMDctMDdcclxuICovXHJcbnV0aWwuZ2V0SXRlbXNGcm9tQXJyYXlCeUtleXMgPSBmdW5jdGlvbiAob3BBLCBrZXlzLCBpc0FsbG93TnVsbCkge1xyXG4gIGlmICghKG9wQSBpbnN0YW5jZW9mIEFycmF5KSkgb3BBID0gW29wQV07XHJcbiAgaWYgKCEoa2V5cyBpbnN0YW5jZW9mIEFycmF5KSkga2V5cyA9IFtrZXlzXTtcclxuICB2YXIgdmFsdWVzID0gW107XHJcbiAgb3BBLm1hcChmdW5jdGlvbiAob2JqKSB7XHJcbiAgICB2YXIgdmFsdWUgPSB7fTtcclxuICAgIGtleXMubWFwKGZ1bmN0aW9uIChrZXkpIHtcclxuICAgICAgaWYgKG9iaiAmJiBrZXkpIHtcclxuICAgICAgICBpZiAoaXNBbGxvd051bGwpIHtcclxuICAgICAgICAgIHZhbHVlW2tleV0gPSBvYmpba2V5XTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgaWYgKG9ialtrZXldKSB7XHJcbiAgICAgICAgICAgIHZhbHVlW2tleV0gPSBvYmpba2V5XTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgdmFsdWVzLnB1c2godmFsdWUpO1xyXG4gIH0pO1xyXG4gIHJldHVybiB2YWx1ZXM7XHJcbn07XHJcblxyXG4vKipcclxuICog5qC55o2ua2V5c+WAvO+8jOS7jm9iamVjdOS4reWPluWHuuWvueW6lOeahOaVsOe7hFxyXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqIOa6kOWvueixoVxyXG4gKiBAcGFyYW0ge0FycmF5fFN0cmluZ30ga2V5cyDopoHlj5bnmoTplK7lgLzmlbDnu4TmiJbogIXlrZfnrKbkuLJcclxuICogQHBhcmFtIHtCb29sZWFufSBpc0ZpbHRlck51bGwg5piv5ZCm6L+H5ruk56m65YC877yM6buY6K6k5LiN5YWB6K6477yM5LuF5Y+W5pWw57uE5pe25pyJ5pWIXHJcbiAqIEByZXR1cm4ge0FycmF5fSBbe2tleTE6WFgsa2V5MjpYWH0se2tleTE6WFgsa2V5MjpYWH1dXHJcbiAqIEBhdXRob3IgandcclxuICogQGRhdGUgMjAxNy0wNy0wN1xyXG4gKi9cclxudXRpbC5nZXRBdHRyc0Zyb21PYmplY3RCeUtleXMgPSBmdW5jdGlvbiAob2JqLCBrZXlzLCBpc0ZpbHRlck51bGwpIHtcclxuICBpZiAoIShrZXlzIGluc3RhbmNlb2YgQXJyYXkpKSB7XHJcbiAgICBpZiAob2JqICYmIGtleXMpIHtcclxuICAgICAgcmV0dXJuIG9ialtrZXlzXTtcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgdmFyIHZhbHVlcyA9IFtdO1xyXG4gICAgdmFyIHZhbHVlID0ge307XHJcbiAgICBrZXlzLm1hcChmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgIGlmIChvYmogJiYga2V5KSB7XHJcbiAgICAgICAgaWYgKCFpc0ZpbHRlck51bGwpIHtcclxuICAgICAgICAgIHZhbHVlW2tleV0gPSBvYmpba2V5XTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgaWYgKG9ialtrZXldKSB7XHJcbiAgICAgICAgICAgIHZhbHVlW2tleV0gPSBvYmpba2V5XTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgdmFsdWVzLnB1c2godmFsdWUpO1xyXG4gICAgcmV0dXJuIHZhbHVlcztcclxuICB9XHJcbn07XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbmxldCBfY2hpbmVzZUNoYXJzID0gJzEyMzQ1Njc4OUFCQ0RFJztcclxuLyoqXHJcbiAqIOagueaNruaxieWtl+Wtl+espui/m+ihjOaOkuW6j1xyXG4gKiBAcGFyYW0ge0FycmF5fSBvcEEgIOimgeaOkuW6j+eahOaVsOe7hFxyXG4gKiBAcGFyYW0ge09iamVjdH0gcGFyYW1cclxuICogQHJldHVybiB7QXJyYXl9ICDmjpLluo/lkI7nmoTmlbDnu4RcclxuICogQGV4YW1wbGUgdXRpbC5zb3J0QXJyYXlCeUNoYXIoa2V5cyk7XHJcbiAqL1xyXG51dGlsLnNvcnRBcnJheUJ5Q2hhciA9IGZ1bmN0aW9uIChvcEEsIHBhcmFtKSB7XHJcbiAgcmV0dXJuIG9wQS5zb3J0KGZ1bmN0aW9uIChjMSwgYzIpIHtcclxuICAgIHZhciBhO1xyXG4gICAgdmFyIGI7XHJcbiAgICBpZiAocGFyYW0gJiYgcGFyYW1bJ3VzZUF0dHJpYnV0ZSddKSB7XHJcbiAgICAgIGEgPSAoJycgKyB1dGlsLmdldEF0dHJpYnV0ZShjMSwgcGFyYW1bJ3VzZUF0dHJpYnV0ZSddKSkuc3BsaXQoJycpO1xyXG4gICAgICBiID0gKCcnICsgdXRpbC5nZXRBdHRyaWJ1dGUoYzIsIHBhcmFtWyd1c2VBdHRyaWJ1dGUnXSkpLnNwbGl0KCcnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGEgPSAoJycgKyBjMSkuc3BsaXQoJycpO1xyXG4gICAgICBiID0gKCcnICsgYzIpLnNwbGl0KCcnKTtcclxuICAgIH1cclxuXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgaWYgKGJbaV0gPT09IHVuZGVmaW5lZCkgcmV0dXJuIDE7XHJcbiAgICAgIGlmIChhW2ldID09IGJbaV0pIGNvbnRpbnVlO1xyXG5cclxuICAgICAgdmFyIGluZGV4YSA9IF9jaGluZXNlQ2hhcnMuaW5kZXhPZihhW2ldKTtcclxuICAgICAgdmFyIGluZGV4YiA9IF9jaGluZXNlQ2hhcnMuaW5kZXhPZihiW2ldKTtcclxuICAgICAgaWYgKGluZGV4YSA9PSAtMSAmJiBpbmRleGIgPT0gLTEpIHtcclxuICAgICAgICBpZiAoYVtpXSA+IGJbaV0pIHJldHVybiAxO1xyXG4gICAgICAgIHJldHVybiAtMTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGluZGV4YSAhPSAtMSAmJiBpbmRleGIgPT0gLTEpIHJldHVybiAxO1xyXG4gICAgICBpZiAoaW5kZXhhID09IC0xICYmIGluZGV4YiAhPSAtMSkgcmV0dXJuIC0xO1xyXG4gICAgICBpZiAoaW5kZXhhID4gaW5kZXhiKSByZXR1cm4gMTtcclxuICAgIH1cclxuICAgIHJldHVybiAtMTtcclxuICB9KTtcclxufTtcclxuLyoqXHJcbiAqIOaVsOe7hOaOkuW6jyzmoLnmja7mlbDlrZdcclxuICogQHBhcmFtIHtBcnJheX0gb3BBICDopoHmjpLluo/nmoTmlbDnu4RcclxuICogQHBhcmFtIHtPYmplY3R9IHBhcmFtIOaOkuW6j+eahOadoeS7tlxyXG4gKiBAcmV0dXJuIHtBcnJheX0gICAg5o6S5bqP5ZCO55qE5pWw57uEXHJcbiAqL1xyXG51dGlsLnNvcnRBcnJheUJ5TnVtYmVyID0gZnVuY3Rpb24gKG9wQSwgcGFyYW0pIHtcclxuICByZXR1cm4gb3BBLnNvcnQoZnVuY3Rpb24gKGMxLCBjMikge1xyXG4gICAgaWYgKHBhcmFtICYmIHBhcmFtWyd1c2VBdHRyaWJ1dGUnXSkge1xyXG4gICAgICBjMSA9IGMxW3BhcmFtWyd1c2VBdHRyaWJ1dGUnXV07XHJcbiAgICAgIGMyID0gYzJbcGFyYW1bJ3VzZUF0dHJpYnV0ZSddXTtcclxuICAgIH1cclxuICAgIGlmIChwYXJhbSAmJiBwYXJhbVsnZGlyJ10gPT0gJ2Rlc2NlbmRpbmcnKSB7XHJcbiAgICAgIGlmIChjMSA8IGMyKSByZXR1cm4gMTtcclxuICAgICAgcmV0dXJuIC0xO1xyXG4gICAgfVxyXG4gICAgaWYgKGMyIDwgYzEpIHJldHVybiAxO1xyXG4gICAgcmV0dXJuIC0xO1xyXG4gIH0pO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOaYr+WQpuaVsOWtl++8jOS4jeW4puWwj+aVsOeCuVxyXG4gKiDkuI3nrqHmoLzlvI/vvIzlrZfnrKbkuLLkuZ/lj6/ku6VcclxuICovXHJcbnV0aWwuaXNOdW0gPSBmdW5jdGlvbiAobnVtKSB7XHJcbiAgdmFyIHJlTnVtID0gL15cXGQqJC87XHJcbiAgcmV0dXJuIG51bSAhPT0gJycgJiYgcmVOdW0udGVzdChudW0pO1xyXG59O1xyXG5cclxuLyogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuICpcclxuICogVVVJRFxyXG4gKlxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiDliJvlu7rllK/kuIDor4bliKvnoIEgKFVuaXZlcnNhbGx5IFVuaXF1ZSBJZGVudGlmaWVyKVxyXG4gKiBAcmV0dXJuIHtTdHJpbmd9XHJcbiAqL1xyXG51dGlsLmNyZWF0ZVVVSUQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIGRnID0gbmV3IERhdGUoMTU4MiwgMTAsIDE1LCAwLCAwLCAwLCAwKTtcclxuICB2YXIgZGMgPSBuZXcgRGF0ZSgpO1xyXG4gIHZhciB0ID0gZGMuZ2V0VGltZSgpIC0gZGcuZ2V0VGltZSgpO1xyXG4gIHZhciB0bCA9IHV0aWwuX1VVSURfZ2V0SW50ZWdlckJpdHModCwgMCwgMzEpO1xyXG4gIHZhciB0bSA9IHV0aWwuX1VVSURfZ2V0SW50ZWdlckJpdHModCwgMzIsIDQ3KTtcclxuICB2YXIgdGh2ID0gdXRpbC5fVVVJRF9nZXRJbnRlZ2VyQml0cyh0LCA0OCwgNTkpICsgJzEnOyAvLyB2ZXJzaW9uIDEsIHNlY3VyaXR5IHZlcnNpb24gaXMgMlxyXG4gIHZhciBjc2FyID0gdXRpbC5fVVVJRF9nZXRJbnRlZ2VyQml0cyh1dGlsLl9VVUlEX3JhbmQoNDA5NSksIDAsIDcpO1xyXG4gIHZhciBjc2wgPSB1dGlsLl9VVUlEX2dldEludGVnZXJCaXRzKHV0aWwuX1VVSURfcmFuZCg0MDk1KSwgMCwgNyk7XHJcblxyXG4gIHZhciBuID0gdXRpbC5fVVVJRF9nZXRJbnRlZ2VyQml0cyh1dGlsLl9VVUlEX3JhbmQoODE5MSksIDAsIDcpXHJcbiAgICArIHV0aWwuX1VVSURfZ2V0SW50ZWdlckJpdHModXRpbC5fVVVJRF9yYW5kKDgxOTEpLCA4LCAxNSlcclxuICAgICsgdXRpbC5fVVVJRF9nZXRJbnRlZ2VyQml0cyh1dGlsLl9VVUlEX3JhbmQoODE5MSksIDAsIDcpXHJcbiAgICArIHV0aWwuX1VVSURfZ2V0SW50ZWdlckJpdHModXRpbC5fVVVJRF9yYW5kKDgxOTEpLCA4LCAxNSlcclxuICAgICsgdXRpbC5fVVVJRF9nZXRJbnRlZ2VyQml0cyh1dGlsLl9VVUlEX3JhbmQoODE5MSksIDAsIDE1KTsgLy8gdGhpcyBsYXN0IG51bWJlciBpcyB0d28gb2N0ZXRzIGxvbmdcclxuICByZXR1cm4gdGwgKyB0bSArIHRodiArIGNzYXIgKyBjc2wgKyBuO1xyXG59O1xyXG4vKipcclxuICogVVVJROaVtOaVsOiKgueCuVxyXG4gKiBAcGFyYW0ge1N0cmluZ30gdmFsICDmupBcclxuICogQHBhcmFtIHtOdW1iZXJ9IHN0YXJ0IOi1t+eCuVxyXG4gKiBAcGFyYW0ge051bWJlcn0gZW5kICAg57uI54K5XHJcbiAqIEByZXR1cm4ge1N0cmluZ30gICAg5oiq5Y+W5ZCO55qE5a2X56ym5LiyXHJcbiAqL1xyXG51dGlsLl9VVUlEX2dldEludGVnZXJCaXRzID0gZnVuY3Rpb24gKHZhbCwgc3RhcnQsIGVuZCkge1xyXG4gIHZhciBiYXNlMTYgPSB1dGlsLl9VVUlEX3JldHVybkJhc2UodmFsLCAxNik7XHJcbiAgdmFyIHF1YWRBcnJheSA9IFtdO1xyXG4gIHZhciBxdWFkU3RyaW5nID0gJyc7XHJcbiAgdmFyIGkgPSAwO1xyXG4gIGZvciAoaSA9IDA7IGkgPCBiYXNlMTYubGVuZ3RoOyBpKyspIHtcclxuICAgIHF1YWRBcnJheS5wdXNoKGJhc2UxNi5zdWJzdHJpbmcoaSwgaSArIDEpKTtcclxuICB9XHJcbiAgZm9yIChpID0gTWF0aC5mbG9vcihzdGFydCAvIDQpOyBpIDw9IE1hdGguZmxvb3IoZW5kIC8gNCk7IGkrKykge1xyXG4gICAgaWYgKCFxdWFkQXJyYXlbaV0gfHwgcXVhZEFycmF5W2ldID09ICcnKSBxdWFkU3RyaW5nICs9ICcwJztcclxuICAgIGVsc2UgcXVhZFN0cmluZyArPSBxdWFkQXJyYXlbaV07XHJcbiAgfVxyXG4gIHJldHVybiBxdWFkU3RyaW5nO1xyXG59O1xyXG4vKipcclxuICog5oqK5Y2B6L+b5Yi25pWw5a2X6L2s5oiQMTbov5vliLbnmoTmlbDlrZdcclxuICogQHBhcmFtIHtOdW1iZXJ9IG51bWJlciDljYHov5vliLbmlbDlrZdcclxuICogQHBhcmFtIHt9IGJhc2VcclxuICogQHJldHVybiB7U3RyaW5nfVxyXG4gKi9cclxudXRpbC5fVVVJRF9yZXR1cm5CYXNlID0gZnVuY3Rpb24gKG51bWJlciwgYmFzZSkge1xyXG4gIHJldHVybiAobnVtYmVyKS50b1N0cmluZyhiYXNlKS50b1VwcGVyQ2FzZSgpO1xyXG59O1xyXG4vKipcclxuICog6L+U5Zue6ZqP5py66L+R5Ly85pW05pWw5YC8XHJcbiAqIEBwYXJhbSB7TnVtYmVyfSBtYXhcclxuICogQHJldHVybiB7TnVtYmVyfVxyXG4gKi9cclxudXRpbC5fVVVJRF9yYW5kID0gZnVuY3Rpb24gKG1heCkge1xyXG4gIHJldHVybiBNYXRoLmZsb29yKHVpbnYucmFuZG9tKCkgKiAobWF4ICsgMSkpO1xyXG59O1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vKipcclxuICog5oqKIE51bWJlciDlm5voiI3kupTlhaXkuLrmjIflrprlsI/mlbDkvY3mlbDnmoTmlbDlrZdcclxuICogQHBhcmFtIHtOdW1iZXJ9IG51bSAgICDmlbDlrZdcclxuICogQHBhcmFtIHtOdW1iZXJ9IHRvRml4ZWQgIOS9jeaVsFxyXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGZvcmNlIOaYr+WQpuaJgOacieaVsOmDveS/neeVmeS9jeaVsO+8jOWNs+aVtOaVsDPovazmjaLlkI7kuLozLjAw5LmL57G7XHJcbiAqIEByZXR1cm4ge051bWJlcn0gIOWbm+iIjeS6lOWFpeWQjueahOaVsOWtl1xyXG4gKi9cclxudXRpbC50b0ZpeGVkID0gZnVuY3Rpb24gKG51bSwgdG9GaXhlZCwgZm9yY2UpIHtcclxuICBpZiAoZm9yY2UpIHtcclxuICAgIHJldHVybiBudW0udG9GaXhlZCh0b0ZpeGVkKTtcclxuICB9XHJcbiAgdmFyIHN0ciA9IG51bS50b1N0cmluZygpO1xyXG4gIHZhciBwb3MgPSBzdHIuaW5kZXhPZignLicpO1xyXG4gIGlmIChwb3MgPT0gLTEpIHJldHVybiBzdHI7XHJcbiAgaWYgKHN0ci5sZW5ndGggPiBwb3MgKyB0b0ZpeGVkICsgMSkge1xyXG4gICAgcmV0dXJuIG51bS50b0ZpeGVkKHRvRml4ZWQpO1xyXG4gIH1cclxuICByZXR1cm4gc3RyO1xyXG59O1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vKipcclxuICog5oqKUkdC5YC86L2s5Li657O757uf5L2/55So55qE5qC85byPWzI1NSwwLDBd6L2s5oiQWzEsMCwwXSDkv53nlZkz5Li65bCP5pWwXHJcbiAqIEBwYXJhbSB7QXJyYXl9IGlucHV0XHJcbiAqIEBwYXJhbSB7TnVtYmVyfSBjb2xvclN5c3RlbVxyXG4gKiBAcmV0dXJuIHtBcnJheX1cclxuICovXHJcbnV0aWwubm9ybWFsaXplQ29sb3IgPSBmdW5jdGlvbiAoaW5wdXQsIGNvbG9yU3lzdGVtKSB7XHJcbiAgaWYgKHR5cGVvZiBpbnB1dCA9PSAnc3RyaW5nJykge1xyXG4gICAgaWYgKGlucHV0LmluZGV4T2YoJyAnKSAhPSAtMSkgaW5wdXQgPSBpbnB1dC5zcGxpdCgnICcpO1xyXG4gICAgZWxzZSBpZiAoaW5wdXQuaW5kZXhPZignLCcpICE9IC0xKSBpbnB1dCA9IGlucHV0LnNwbGl0KCcsJyk7XHJcbiAgfVxyXG5cclxuICB2YXIgcmVzdWx0ID0gW2lucHV0WzBdLCBpbnB1dFsxXSwgaW5wdXRbMl0sIGlucHV0WzNdXTtcclxuXHJcbiAgaWYgKGNvbG9yU3lzdGVtID09PSB1bmRlZmluZWQpIHtcclxuICAgIGlmIChpbnB1dFswXSA8PSAxICYmIGlucHV0WzFdIDw9IDEgJiYgaW5wdXRbMl0gPD0gMSkgY29sb3JTeXN0ZW0gPSAxO1xyXG4gIH1cclxuXHJcbiAgaWYgKGNvbG9yU3lzdGVtICE9IDEpIHtcclxuICAgIHJlc3VsdFswXSA9IChyZXN1bHRbMF0gLyAyNTUpLnRvRml4ZWQoMyk7XHJcbiAgICByZXN1bHRbMV0gPSAocmVzdWx0WzFdIC8gMjU1KS50b0ZpeGVkKDMpO1xyXG4gICAgcmVzdWx0WzJdID0gKHJlc3VsdFsyXSAvIDI1NSkudG9GaXhlZCgzKTtcclxuICAgIGlmIChyZXN1bHRbM10gIT09IHVuZGVmaW5lZCkgcmVzdWx0WzNdID0gKHJlc3VsdFszXSAvIDI1NSkudG9GaXhlZCgzKTtcclxuICB9XHJcbiAgaWYgKHJlc3VsdFszXSA9PT0gdW5kZWZpbmVkKSByZXN1bHRbM10gPSAxO1xyXG5cclxuICByZXR1cm4gcmVzdWx0O1xyXG59O1xyXG5cclxuLy9jb2xvclN5c3RlbSDkuLogMSA6XCIwLjEgMC4xIDAuMVwiIDsgY29sb3JTeXN0ZW0g5Li6MjU1IDpcIjIzMiAzMiAzNFwiXHJcbi8qKlxyXG4gKiDop6PmnpDnvZHpobXpopzoibJcclxuICogQHBhcmFtIHtBcnJheX0gaW5wdXRcclxuICogQHBhcmFtIHtOdW1iZXJ9IGNvbG9yU3lzdGVtXHJcbiAqIEByZXR1cm4ge0FycmF5fVxyXG4gKi9cclxudXRpbC5wYXJzZVdlYkNvbG9yID0gZnVuY3Rpb24gKGlucHV0LCBjb2xvclN5c3RlbSkge1xyXG4gIGlmICh0eXBlb2YgaW5wdXQgPT0gJ3N0cmluZycpIHtcclxuICAgIGlmIChpbnB1dC5pbmRleE9mKCcgJykgIT0gLTEpIGlucHV0ID0gaW5wdXQuc3BsaXQoJyAnKTtcclxuICAgIGVsc2UgaWYgKGlucHV0LmluZGV4T2YoJywnKSAhPSAtMSkgaW5wdXQgPSBpbnB1dC5zcGxpdCgnLCcpO1xyXG4gIH1cclxuICBpZiAoY29sb3JTeXN0ZW0gPT09IHVuZGVmaW5lZCkge1xyXG4gICAgaWYgKGlucHV0WzBdIDw9IDEgJiYgaW5wdXRbMV0gPD0gMSAmJiBpbnB1dFsyXSA8PSAxKSBjb2xvclN5c3RlbSA9IDE7XHJcbiAgfVxyXG5cclxuICB2YXIgdG1wID0gW2lucHV0WzBdLCBpbnB1dFsxXSwgaW5wdXRbMl1dO1xyXG4gIGlmIChjb2xvclN5c3RlbSA9PSAxKSB7XHJcbiAgICB0bXBbMF0gPSBNYXRoLnJvdW5kKHRtcFswXSAqIDI1NSk7XHJcbiAgICB0bXBbMV0gPSBNYXRoLnJvdW5kKHRtcFsxXSAqIDI1NSk7XHJcbiAgICB0bXBbMl0gPSBNYXRoLnJvdW5kKHRtcFsyXSAqIDI1NSk7XHJcbiAgfVxyXG4gIHZhciByZXN1bHQgPSAnIyc7XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0bXAubGVuZ3RoOyBpKyspIHtcclxuICAgIHZhciBuID0gTnVtYmVyKHRtcFtpXSkudG9TdHJpbmcoMTYpO1xyXG4gICAgdmFyIE51bWJlcm4gPSBOdW1iZXIobik7XHJcbiAgICBpZiAoaXNOYU4oTnVtYmVybikpIHtcclxuICAgICAgaWYgKG4ubGVuZ3RoID09IDEpIHsgLy/mnInlj6/og73mmK9hLGIsYyxkLGUsZumcgOimgeihpTBcclxuICAgICAgICBuID0gJzAnICsgbjtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKE51bWJlcm4gPCAxMCkgeyAvL+Wwj+S6jjEw5pe26KGlMFxyXG4gICAgICAgIG4gPSAnMCcgKyBuO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXN1bHQgKz0gbjtcclxuICB9XHJcbiAgcmV0dXJuIHJlc3VsdDtcclxufTtcclxuLyoqXHJcbiAqIOino+aekDE26L+b5Yi2572R6aG16aKc6Imy6L2s5o2i5Li6UkdC5YC8XHJcbiAqIEBwYXJhbSB7QXJyYXl9IGlucHV0IFwiIzAwNTM4YlwiXHJcbiAqXHJcbiAqIEByZXR1cm4ge0FycmF5fVxyXG4gKi9cclxudXRpbC50b0hleFN0cmluZyA9IGZ1bmN0aW9uIChpbnB1dCkge1xyXG4gIGlmICh0eXBlb2YgaW5wdXQgPT0gJ3N0cmluZycpIHtcclxuICAgIHZhciBjb2xvcnMgPSBpbnB1dC5zcGxpdCgnIycpO1xyXG4gICAgdmFyIGNvbG9yOiBzdHJpbmcgPSBjb2xvcnNbMV07XHJcbiAgICB2YXIgbGF5ZXJDb2xvciA9IFswLCAwLCAwXTtcclxuICAgIGxheWVyQ29sb3JbMF0gPSBwYXJzZUludChjb2xvci5zdWJzdHIoMCwgMiksIDE2KSAvIDI1NTtcclxuICAgIGxheWVyQ29sb3JbMV0gPSBwYXJzZUludChjb2xvci5zdWJzdHIoMiwgMiksIDE2KSAvIDI1NTtcclxuICAgIGxheWVyQ29sb3JbMl0gPSBwYXJzZUludChjb2xvci5zdWJzdHIoNCwgMiksIDE2KSAvIDI1NTtcclxuICAgIHJldHVybiBsYXllckNvbG9yO1xyXG4gIH1cclxuICByZXR1cm4gWzAsIDAsIDBdO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOi/h+a7pOeJueauiuWtl+espuS4suW5tua4hemZpOepuuagvFxyXG4gKiBAcGFyYW0ge30gY2hhcmFjdGVyc1xyXG4gKi9cclxudXRpbC5kZWxTcGFjZUNoYXJhY3RlciA9IGZ1bmN0aW9uIChjaGFyYWN0ZXJzKSB7XHJcbiAgdmFyIHBhdHRlcm4gPSBuZXcgUmVnRXhwKCdbYH4hQCMkXiYqKCk9fHt9XFwnOjtcXCcsXFxcXFtcXFxcXS48Pi8/fu+8gUAj77+l4oCm4oCmJirvvIjvvIkl77yFfOOAkOOAkeKAmO+8m++8muKAneKAnFxcJ+OAgu+8jOOAge+8ny1dJyk7XHJcbiAgdmFyIHJzID0gJyc7XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGFyYWN0ZXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBycyA9IHJzICsgY2hhcmFjdGVycy5zdWJzdHIoaSwgMSkucmVwbGFjZShwYXR0ZXJuLCAnJyk7XHJcbiAgfVxyXG4gIHJzID0gcnMucmVwbGFjZSgnXFxcXCcsICcnKTtcclxuICBycyA9IHJzLnJlcGxhY2UoL1xccy9naSwgJycpO1xyXG4gIHJldHVybiBycztcclxufTtcclxuXHJcbi8qKlxyXG4gKiDnibnmrornrKblj7fov4fmu6QsIOWFgeiuuOi+k+WFpeS4gOiIrOagh+eCueespuWPt1xyXG4gKiBAcGFyYW0ge3N0cmluZ30gc1xyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGlzT3V0U3BhY2Ug5piv5ZCm5b+955Wl56m65qC8XHJcbiAqIEByZXR1cm4ge31cclxuICovXHJcbnV0aWwucmVwbGFjZU1hcmsgPSBmdW5jdGlvbiAocywgaXNPdXRTcGFjZSkge1xyXG4gIC8vIHZhciBwYXR0ZXJuID0gbmV3IFJlZ0V4cChcIltgfiFAIyReJiooKT18e30nOjsnLFxcXFxbXFxcXF0uPD4vP37vvIFAI++/peKApuKApiYq77yI77yJJe+8hXzjgJDjgJHigJjvvJvvvJrigJ3igJwn44CC77yM44CB77yfXVwiKTtcclxuICB2YXIgcGF0dGVybiA9IG5ldyBSZWdFeHAoJ1tgfl4qPXx7fTw+77+l4oCm4oCmKnzigJjigJ3igJxcXCddJyk7XHJcbiAgdmFyIHJzID0gJyc7XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBycyA9IHJzICsgcy5zdWJzdHIoaSwgMSkucmVwbGFjZShwYXR0ZXJuLCAnJyk7XHJcbiAgICBycyA9IHJzLnJlcGxhY2UoJy0nLCAnJyk7XHJcbiAgICAvLyBycyA9IHJzLnJlcGxhY2UoJ1xcXFwnLCAnJyk7XHJcbiAgICBpZiAoIWlzT3V0U3BhY2UpIHtcclxuICAgICAgcnMgPSBycy5yZXBsYWNlKCcgJywgJycpO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gcnM7XHJcbn07XHJcblxyXG4vKipcclxuICog5rWL6K+V5piv5ZCm5YyF5ZCr54m55q6K5a2X56ym77yI5YW25Lit5LiN5YyF5ZCr5Y2V5byV5Y+377yM5Zug5Li6d2luMTDlvq7ova/ovpPlhaXms5XovpPlhaXor43or63ml7bvvIzkvJrmnInljZXlvJXlj7fvvIlcclxuICogQGF1dGhvciBqd1xyXG4gKiBAZGF0ZSAyMDE2LTExLTI5XHJcbiAqIEByZXR1cm4ge2Jvb2xlYW59IOaYr++8jOi/lOWbnnRydWVcclxuICovXHJcbnV0aWwudGVzdE1hcmsgPSBmdW5jdGlvbiAocykge1xyXG4gIHZhciBwYXR0ZXJuID0gbmV3IFJlZ0V4cCgnW2B+Xip8e308Pu+/peKApuKApip84oCY4oCd4oCcXScpO1xyXG4gIC8vIHZhciBwYXR0ZXJuID0gbmV3IFJlZ0V4cChcIltgfiFAIyReJiooKT18e306OyxcXFxcW1xcXFxdLjw+Lz9+77yBQCPvv6XigKbigKYmKu+8iO+8iSXvvIV844CQ44CR4oCY77yb77ya4oCd4oCc44CC77yM44CB77yfXVwiKTtcclxuICByZXR1cm4gcGF0dGVybi50ZXN0KHMpO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOWIoOmZpOaJgOacieepuuagvOWSjOWNleW8leWPt1xyXG4gKiBAYXV0aG9yIGp3XHJcbiAqIEBkYXRlIDIwMTYtMTEtMjRcclxuICovXHJcbnV0aWwuZGVsU3BhY2UgPSBmdW5jdGlvbiAocykge1xyXG4gIHMgPSBzLnJlcGxhY2UoL1xccy9naSwgJycpO1xyXG4gIHMgPSBzLnJlcGxhY2UoLycvZ2ksICcnKTtcclxuICBzID0gcy5yZXBsYWNlKC9cIi9naSwgJycpO1xyXG4gIHJldHVybiBzO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIEBkZXNjcmlwdGlvbiBiYXNlNjTliqDlr4ZcclxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciDlrZfnrKbkuLJcclxuICpcclxuICovXHJcbnV0aWwuYmFzZTY0RW5jb2RlID0gZnVuY3Rpb24gKHN0cikge1xyXG4gIHZhciBiYXNlNjRFbmNvZGVDaGFycyA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJztcclxuICB2YXIgb3V0LCBpLCBsZW47XHJcbiAgdmFyIGMxLCBjMiwgYzM7XHJcblxyXG4gIGxlbiA9IHN0ci5sZW5ndGg7XHJcbiAgaSA9IDA7XHJcbiAgb3V0ID0gJyc7XHJcbiAgd2hpbGUgKGkgPCBsZW4pIHtcclxuICAgIGMxID0gc3RyLmNoYXJDb2RlQXQoaSsrKSAmIDB4ZmY7XHJcbiAgICBpZiAoaSA9PSBsZW4pIHtcclxuICAgICAgb3V0ICs9IGJhc2U2NEVuY29kZUNoYXJzLmNoYXJBdChjMSA+PiAyKTtcclxuICAgICAgb3V0ICs9IGJhc2U2NEVuY29kZUNoYXJzLmNoYXJBdCgoYzEgJiAweDMpIDw8IDQpO1xyXG4gICAgICBvdXQgKz0gJz09JztcclxuICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbiAgICBjMiA9IHN0ci5jaGFyQ29kZUF0KGkrKyk7XHJcbiAgICBpZiAoaSA9PSBsZW4pIHtcclxuICAgICAgb3V0ICs9IGJhc2U2NEVuY29kZUNoYXJzLmNoYXJBdChjMSA+PiAyKTtcclxuICAgICAgb3V0ICs9IGJhc2U2NEVuY29kZUNoYXJzLmNoYXJBdCgoKGMxICYgMHgzKSA8PCA0KSB8ICgoYzIgJiAweEYwKSA+PiA0KSk7XHJcbiAgICAgIG91dCArPSBiYXNlNjRFbmNvZGVDaGFycy5jaGFyQXQoKGMyICYgMHhGKSA8PCAyKTtcclxuICAgICAgb3V0ICs9ICc9JztcclxuICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbiAgICBjMyA9IHN0ci5jaGFyQ29kZUF0KGkrKyk7XHJcbiAgICBvdXQgKz0gYmFzZTY0RW5jb2RlQ2hhcnMuY2hhckF0KGMxID4+IDIpO1xyXG4gICAgb3V0ICs9IGJhc2U2NEVuY29kZUNoYXJzLmNoYXJBdCgoKGMxICYgMHgzKSA8PCA0KSB8ICgoYzIgJiAweEYwKSA+PiA0KSk7XHJcbiAgICBvdXQgKz0gYmFzZTY0RW5jb2RlQ2hhcnMuY2hhckF0KCgoYzIgJiAweEYpIDw8IDIpIHwgKChjMyAmIDB4QzApID4+IDYpKTtcclxuICAgIG91dCArPSBiYXNlNjRFbmNvZGVDaGFycy5jaGFyQXQoYzMgJiAweDNGKTtcclxuICB9XHJcbiAgcmV0dXJuIG91dDtcclxufTtcclxuXHJcbi8qKlxyXG4gKiDlubPpk7rmlbDnu4TkuK3mlbDnu4RcclxuICogQHBhcmFtIHtBcnJheX0gYXJyIOaVsOe7hFxyXG4gKiBAcmV0dXJuIHtBcnJheX1cclxuICovXHJcbnV0aWwuZmxhdHRlbiA9IGZ1bmN0aW9uIGZsYXR0ZW4oYXJyKSB7XHJcbiAgcmV0dXJuIGFyci5yZWR1Y2UoZnVuY3Rpb24gKGEsIGIpIHtcclxuICAgIHJldHVybiBhLmNvbmNhdChBcnJheS5pc0FycmF5KGIpID8gZmxhdHRlbihiKSA6IGIpO1xyXG4gIH0sIFtdKTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBkYXRhVVJMKGJhc2U2NOWtl+espuS4sinovazmjaLkuLpCbG9i5a+56LGh77yI5LqM6L+b5Yi25aSn5a+56LGh77yJXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBkYXRhVXJsIGJhc2U2NOWtl+espuS4slxyXG4gKiBAcmV0dXJuIHtCbG9ifVxyXG4gKi9cclxudXRpbC5kYXRhVVJMdG9CbG9iID0gZnVuY3Rpb24gKGRhdGFVcmwpIHtcclxuICB2YXIgYXJyID0gZGF0YVVybC5zcGxpdCgnLCcpO1xyXG4gIHZhciBtaW1lID0gYXJyWzBdLm1hdGNoKC86KC4qPyk7LylbMV07Ly8g57uT5p6c77yaICAgaW1hZ2UvcG5nXHJcbiAgLy8gY29uc29sZS5sb2coXCJhcnJbMF09PT09XCIgKyBKU09OLnN0cmluZ2lmeShhcnJbMF0pKTsvLyAgIFwiZGF0YTppbWFnZS9wbmc7YmFzZTY0XCJcclxuICAvLyBjb25zb2xlLmxvZyhcImFyclswXS5tYXRjaCgvOiguKj8pOy8pPT09PVwiICsgYXJyWzBdLm1hdGNoKC86KC4qPyk7LykpOy8vIDppbWFnZS9wbmc7LGltYWdlL3BuZ1xyXG4gIC8vIGNvbnNvbGUubG9nKFwiYXJyWzBdLm1hdGNoKC86KC4qPyk7LylbMV09PT09XCIgKyBhcnJbMF0ubWF0Y2goLzooLio/KTsvKVsxXSk7Ly8gICBpbWFnZS9wbmdcclxuICB2YXIgYnN0ciA9IGF0b2IoYXJyWzFdLnJlcGxhY2UoL1xccy9nLCAnJykpO1xyXG4gIHZhciBuID0gYnN0ci5sZW5ndGg7XHJcbiAgdmFyIHU4YXJyID0gbmV3IFVpbnQ4QXJyYXkobik7XHJcbiAgd2hpbGUgKG4tLSkge1xyXG4gICAgdThhcnJbbl0gPSBic3RyLmNoYXJDb2RlQXQobik7XHJcbiAgfVxyXG4gIHJldHVybiBuZXcgQmxvYihbdThhcnJdLCB7dHlwZTogbWltZX0pOy8v5YC877yM57G75Z6LXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB1dGlsO1xyXG4iLCJpbXBvcnQgdWludiBmcm9tICcuL3VpbnYnO1xyXG5cclxuY29uc3QgaGFzaDphbnkgPSB7fTtcclxuLyoqXHJcbiAqIOiOt+WPluWvueixoeS4reWFg+e0oOaVsOebrlxyXG4gKiBAcGFyYW0ge09iamVjdH0gb3BPYmplY3RcclxuICogQHJldHVybiB7TnVtYmVyfVxyXG4gKi9cclxuaGFzaC5nZXRTaXplID0gZnVuY3Rpb24gKG9wT2JqZWN0KSB7XHJcbiAgdmFyIHJlc3VsdCA9IDA7XHJcbiAgZm9yICh2YXIgY3VyIGluIG9wT2JqZWN0KSB7XHJcbiAgICByZXN1bHQgKz0gMTtcclxuICB9XHJcbiAgcmV0dXJuIHJlc3VsdDtcclxufTtcclxuLyoqXHJcbiAqIOafpeeci+WvueixoeaYr+WQpuWMheWQq+WFg+e0oFxyXG4gKiBAcGFyYW0ge09iamVjdH0gb3BPYmplY3RcclxuICogQHJldHVybiB7Qm9vbGVhbn1cclxuICovXHJcbmhhc2guaXNFbXB0eSA9IGZ1bmN0aW9uIChvcE9iamVjdCkge1xyXG4gIGZvciAodmFyIGN1ciBpbiBvcE9iamVjdCkge1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuICByZXR1cm4gdHJ1ZTtcclxufTtcclxuLyoqXHJcbiAqIOafpeeci+WvueixoeS4reaYr+WQpuWMheWQq+aMh+WumuWQjeensOeahOWFg+e0oFxyXG4gKiBAcGFyYW0ge09iamVjdH0gb3BPYmplY3RcclxuICogQHBhcmFtIHtTdHJpbmd9IGtleVxyXG4gKiBAcmV0dXJuIHtCb29sZWFufVxyXG4gKi9cclxuaGFzaC5oYXNLZXkgPSBmdW5jdGlvbiAob3BPYmplY3QsIGtleSkge1xyXG4gIC8vIHJldHVybiB0eXBlb2Ygb3BPYmplY3Rba2V5XSAhPSAndW5kZWZpbmVkJztcclxuICBpZiAob3BPYmplY3QgIT0gbnVsbCkge1xyXG4gICAgcmV0dXJuIG9wT2JqZWN0Lmhhc093blByb3BlcnR5KGtleSk7XHJcbiAgfVxyXG4gIGNvbnNvbGUuZXJyb3IoJ+S8oOWFpW9wT2JqZWN05Y+C5pWw5pyJ6K+vJyk7XHJcbiAgcmV0dXJuIGZhbHNlO1xyXG59O1xyXG4vKipcclxuICog6YeN5paw5ZG95ZCN5a+56LGh5YWD57SgXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcE9iamVjdFxyXG4gKiBAcGFyYW0ge1N0cmluZ30gb2xkS2V5XHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBuZXdLZXlcclxuICovXHJcbmhhc2gucmVuYW1lS2V5ID0gZnVuY3Rpb24gKG9wT2JqZWN0LCBvbGRLZXksIG5ld0tleSkge1xyXG4gIGlmIChvcE9iamVjdFtvbGRLZXldKSB7XHJcbiAgICB2YXIgdG1wID0gb3BPYmplY3Rbb2xkS2V5XTtcclxuICAgIGRlbGV0ZSBvcE9iamVjdFtvbGRLZXldO1xyXG4gICAgb3BPYmplY3RbbmV3S2V5XSA9IHRtcDtcclxuICB9XHJcbn07XHJcbi8qKlxyXG4gKiDojrflj5bnrKzkuIDkuKrlhYPntKDnmoTlkI3np7BcclxuICogQHBhcmFtIHtPYmplY3R9IG9wT2JqZWN0XHJcbiAqIEByZXR1cm4ge1N0cmluZ31cclxuICovXHJcbmhhc2guZ2V0Rmlyc3RLZXkgPSBmdW5jdGlvbiAob3BPYmplY3QpIHtcclxuICBmb3IgKHZhciBpIGluIG9wT2JqZWN0KSB7XHJcbiAgICByZXR1cm4gaTtcclxuICB9XHJcbiAgcmV0dXJuIG51bGw7XHJcbn07XHJcbi8qKlxyXG4gKiDojrflj5blr7nosaHmiYDmnInlhYPntKDnmoTlkI3np7BcclxuICogQHBhcmFtIHtPYmplY3R9IG9wT2JqZWN0XHJcbiAqIEByZXR1cm4ge0FycmF5fVxyXG4gKi9cclxuaGFzaC5rZXlzID0gZnVuY3Rpb24gKG9wT2JqZWN0KSB7XHJcbiAgdmFyIGtleXMgPSBbXTtcclxuICBmb3IgKHZhciBpIGluIG9wT2JqZWN0KSB7XHJcbiAgICBrZXlzLnB1c2goaSk7XHJcbiAgfVxyXG4gIHJldHVybiBrZXlzO1xyXG59O1xyXG4vKipcclxuICog6I635Y+W5a+56LGh5Lit56ys5LiA5Liq5YWD57Sg55qE5YC8XHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcE9iamVjdFxyXG4gKiBAcmV0dXJuIHtTdHJpbmd9XHJcbiAqL1xyXG5oYXNoLmdldEZpcnN0VmFsdWUgPSBmdW5jdGlvbiAob3BPYmplY3QpIHtcclxuICBmb3IgKHZhciBpIGluIG9wT2JqZWN0KSB7XHJcbiAgICByZXR1cm4gb3BPYmplY3RbaV07XHJcbiAgfVxyXG4gIHJldHVybiB1bmRlZmluZWQ7XHJcbn07XHJcbi8qKlxyXG4gKiDojrflj5blr7nosaHkuK3miYDmnInlhYPntKDnmoTlgLxcclxuICogQHBhcmFtIHtPYmplY3R9IG9wT2JqZWN0XHJcbiAqIEByZXR1cm4ge0FycmF5fVxyXG4gKi9cclxuaGFzaC52YWx1ZXMgPSBmdW5jdGlvbiAob3BPYmplY3QpIHtcclxuICBpZiAob3BPYmplY3QgaW5zdGFuY2VvZiBBcnJheSkgcmV0dXJuIG9wT2JqZWN0Oy8v5pWw57uE5peg6ZyA6L2s5o2iLGllOOmHjOmBjeWOhuaVsOe7hOS8muaKiuaVsOe7hOWOn+Wei+mTvuaJqeWxleaWueazleW9k+WBmuS4gOS4quWxnuaAp+i+k+WHulxyXG4gIHZhciB2YWx1ZXMgPSBbXTtcclxuICBmb3IgKHZhciBpIGluIG9wT2JqZWN0KSB7XHJcbiAgICB2YWx1ZXMucHVzaChvcE9iamVjdFtpXSk7XHJcbiAgfVxyXG4gIHJldHVybiB2YWx1ZXM7XHJcbn07XHJcblxyXG4vKipcclxuICog5riF6Zmk5a+56LGh5Lit55qE5YWD57SgXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcE9iamVjdFxyXG4gKi9cclxuaGFzaC5jbGVhciA9IGZ1bmN0aW9uIChvcE9iamVjdCkge1xyXG4gIGZvciAodmFyIGtleSBpbiBvcE9iamVjdCkge1xyXG4gICAgZGVsZXRlIG9wT2JqZWN0W2tleV07XHJcbiAgfVxyXG59O1xyXG5cclxuLyoqXHJcbiAqIOWQiOW5tuWvueixoSBB5Lit5LiOQuebuOWQjOWQjeensOeahOWFg+e0oOS8muiiq+abv+aNouaIkELkuK3nmoTlgLwg6L+U5Zue6ZW/5aSn5LqG55qEQVxyXG4gKiBAcGFyYW0ge09iamVjdH0gb3BPYmplY3RBXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcE9iamVjdEJcclxuICogQHBhcmFtIHtCb29sZWFufSBpc0RlZXBcclxuICogQHBhcmFtIHtCb29sZWFufSBpc1JldHVybk5ld1xyXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGlzQ2xvbmVPYmpEZWVwXHJcbiAqIEByZXR1cm4ge09iamVjdH1cclxuICovXHJcbmhhc2guY29tYmluZSA9IGZ1bmN0aW9uIGZ1biAob3BPYmplY3RBLCBvcE9iamVjdEIsIGlzRGVlcCwgaXNSZXR1cm5OZXcsIGlzQ2xvbmVPYmpEZWVwID0gZmFsc2UpIHtcclxuICBpZiAoaXNSZXR1cm5OZXcpIHtcclxuICAgIHZhciB0ZW1wRnVuID0gdWludi5jbG9uZU9iajtcclxuICAgIHZhciByZXN1bHQgPSB0ZW1wRnVuKG9wT2JqZWN0QSwgaXNDbG9uZU9iakRlZXApO1xyXG4gICAgZnVuKHJlc3VsdCwgb3BPYmplY3RCLCBpc0RlZXAsIGZhbHNlKTtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG4gIGZvciAodmFyIGN1ciBpbiBvcE9iamVjdEIpIHtcclxuICAgIGlmIChpc0RlZXApIHtcclxuICAgICAgaWYgKG9wT2JqZWN0QVtjdXJdICE9PSB1bmRlZmluZWQgJiYgb3BPYmplY3RBW2N1cl0gIT09IG51bGxcclxuICAgICAgICAmJiAhKG9wT2JqZWN0QVtjdXJdIGluc3RhbmNlb2YgQXJyYXkpICYmIHR5cGVvZiBvcE9iamVjdEFbY3VyXSA9PSAnb2JqZWN0J1xyXG4gICAgICAgICYmICEob3BPYmplY3RCW2N1cl0gaW5zdGFuY2VvZiBBcnJheSkgJiYgdHlwZW9mIG9wT2JqZWN0QltjdXJdID09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgZnVuKG9wT2JqZWN0QVtjdXJdLCBvcE9iamVjdEJbY3VyXSwgaXNEZWVwLCBmYWxzZSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgb3BPYmplY3RBW2N1cl0gPSBvcE9iamVjdEJbY3VyXTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgb3BPYmplY3RBW2N1cl0gPSBvcE9iamVjdEJbY3VyXTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIG9wT2JqZWN0QTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiDlkIjlubblr7nosaEg5Y+q5Lya5ZyoQeeahOWfuuehgOS4iua3u+WKoOWFg+e0oCzkuI3lvbHlk43ljp/mnInlhYPntKAg6L+U5Zue6ZW/5aSn5LqG55qEQVxyXG4gKiBAcGFyYW0ge09iamVjdH0gb3BPYmplY3RBXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcE9iamVjdEJcclxuICogQHBhcmFtIHtCb29sZWFufSBpc0RlZXBcclxuICogQHBhcmFtIHtCb29sZWFufSBpc1JldHVybk5ld1xyXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGlzQ2xvbmVPYmpEZWVwXHJcbiAqIEByZXR1cm4ge09iamVjdH1cclxuICovXHJcbmhhc2guY29tYmluZU5ldyA9IGZ1bmN0aW9uIGZ1biAob3BPYmplY3RBLCBvcE9iamVjdEIsIGlzRGVlcCwgaXNSZXR1cm5OZXcsIGlzQ2xvbmVPYmpEZWVwID0gZmFsc2UpIHtcclxuICBpZiAoaXNSZXR1cm5OZXcpIHtcclxuICAgIHZhciB0ZW1wRnVuID0gdWludi51dGlsLmNsb25lT2JqIHx8IHVpbnYuY2xvbmVPYmo7XHJcbiAgICB2YXIgcmVzdWx0ID0gdGVtcEZ1bihvcE9iamVjdEEsIGlzQ2xvbmVPYmpEZWVwKTtcclxuICAgIGZ1bihyZXN1bHQsIG9wT2JqZWN0QiwgaXNEZWVwLCBmYWxzZSk7XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuICBmb3IgKHZhciBjdXIgaW4gb3BPYmplY3RCKSB7XHJcbiAgICBpZiAoaXNEZWVwKSB7XHJcbiAgICAgIGlmIChvcE9iamVjdEFbY3VyXSAhPT0gdW5kZWZpbmVkICYmIG9wT2JqZWN0QVtjdXJdICE9PSBudWxsXHJcbiAgICAgICAgJiYgIShvcE9iamVjdEFbY3VyXSBpbnN0YW5jZW9mIEFycmF5KSAmJiB0eXBlb2Ygb3BPYmplY3RBW2N1cl0gPT0gJ29iamVjdCdcclxuICAgICAgICAmJiAhKG9wT2JqZWN0QltjdXJdIGluc3RhbmNlb2YgQXJyYXkpICYmIHR5cGVvZiBvcE9iamVjdEJbY3VyXSA9PSAnb2JqZWN0Jykge1xyXG4gICAgICAgIGZ1bihvcE9iamVjdEFbY3VyXSwgb3BPYmplY3RCW2N1cl0sIGlzRGVlcCwgZmFsc2UpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGlmIChvcE9iamVjdEFbY3VyXSA9PT0gdW5kZWZpbmVkIHx8IG9wT2JqZWN0QVtjdXJdID09PSBudWxsKSBvcE9iamVjdEFbY3VyXSA9IG9wT2JqZWN0QltjdXJdO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAob3BPYmplY3RBW2N1cl0gPT09IHVuZGVmaW5lZCB8fCBvcE9iamVjdEFbY3VyXSA9PT0gbnVsbCkgb3BPYmplY3RBW2N1cl0gPSBvcE9iamVjdEJbY3VyXTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIG9wT2JqZWN0QTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiDmtojlh4/lr7nosaEg5raI5YePQeS4jkLkuK3nm7jlkIznmoTlhYPntKAg6L+U5Zue6KKr5raI5YeP55qEQVxyXG4gKiBAcGFyYW0ge09iamVjdH0gb3BPYmplY3RBXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcE9iamVjdEJcclxuICogQHBhcmFtIHtCb29sZWFufSBpc1JldHVybk5ld1xyXG4gKiBAcmV0dXJuIHtPYmplY3R9XHJcbiAqL1xyXG5oYXNoLnN1YnRyYWN0ID0gZnVuY3Rpb24gKG9wT2JqZWN0QSwgb3BPYmplY3RCLCBpc1JldHVybk5ldykge1xyXG4gIGlmIChpc1JldHVybk5ldyA9PT0gdW5kZWZpbmVkKSBpc1JldHVybk5ldyA9IHRydWU7XHJcbiAgaWYgKGlzUmV0dXJuTmV3KSB7XHJcbiAgICB2YXIgcmVzdWx0ID0ge307XHJcbiAgICBmb3IgKHZhciBjdXIgaW4gb3BPYmplY3RBKSB7XHJcbiAgICAgIGlmICghb3BPYmplY3RCIHx8ICFvcE9iamVjdEJbY3VyXSkgcmVzdWx0W2N1cl0gPSBvcE9iamVjdEFbY3VyXTtcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG4gIGZvciAodmFyIGN1cjIgaW4gb3BPYmplY3RCKSB7XHJcbiAgICBkZWxldGUgb3BPYmplY3RBW2N1cjJdO1xyXG4gIH1cclxuICByZXR1cm4gb3BPYmplY3RBO1xyXG59O1xyXG4vKipcclxuICog6I635Y+W5Lqk5Y+J5YC8IOS7pUHkuLrmoIflh4Ys6L+U5ZueQeS4reS4jkLnm7jlkIzlhYPntKDnu4TmiJDnmoTlr7nosaFcclxuICogQHBhcmFtIHtPYmplY3R9IG9wT2JqZWN0QVxyXG4gKiBAcGFyYW0ge09iamVjdH0gb3BPYmplY3RCXHJcbiAqIEBwYXJhbSB7Qm9vbGVhbn0ga2VlcFZhbHVlU2FtZVxyXG4gKiBAcmV0dXJuIHtPYmplY3R9XHJcbiAqL1xyXG5oYXNoLmdldEludGVyc2VjdGlvbiA9IGZ1bmN0aW9uIChvcE9iamVjdEEsIG9wT2JqZWN0Qiwga2VlcFZhbHVlU2FtZSkge1xyXG4gIHZhciByZXN1bHQgPSB7fTtcclxuICBmb3IgKHZhciBjdXIgaW4gb3BPYmplY3RBKSB7XHJcbiAgICBpZiAob3BPYmplY3RCW2N1cl0pIHtcclxuICAgICAgaWYgKGtlZXBWYWx1ZVNhbWUpIHtcclxuICAgICAgICBpZiAob3BPYmplY3RBW2N1cl0gPT0gb3BPYmplY3RCW2N1cl0pIHJlc3VsdFtjdXJdID0gb3BPYmplY3RBW2N1cl07XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzdWx0W2N1cl0gPSBvcE9iamVjdEFbY3VyXTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gcmVzdWx0O1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgaGFzaDtcclxuIiwiaW1wb3J0IHVpbnYgZnJvbSAnLi91aW52JztcclxuaW1wb3J0IHV0aWwgZnJvbSAnLi91dGlsJztcclxuXHJcbnVpbnYuaGFzaC5jb21iaW5lKHVpbnYudXRpbCwgdXRpbCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB1aW52O1xyXG4iLCJpbXBvcnQgdWludiBmcm9tICcuLi9jb21tb24vaW5kZXgnO1xyXG5cclxuLyoqXHJcbiAqIOWwgeijheeahGxvY2FsU3RvcmFnZeWSjHNlc3Npb25TdG9yYWdl5pa55rOVXHJcbiAqIEBwcml2YXRlXHJcbiAqIEBhdXRob3IgandcclxuICogQGRhdGUgMjAxNy0wOC0wMlxyXG4gKi9cclxubGV0IGRhdGEgPSBmdW5jdGlvbiAoc3RvcmFnZSwga2V5LCB2YWx1ZSkge1xyXG4gIGlmIChrZXkgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG4gIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICByZXR1cm4gdWludi5qc29uUGFyc2Uoc3RvcmFnZS5nZXRJdGVtKGtleSkpO1xyXG4gIH0gZWxzZSBpZiAodmFsdWUgPT0gbnVsbCkge1xyXG4gICAgc3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHN0b3JhZ2Uuc2V0SXRlbShrZXksIHVpbnYuc3RyaW5naWZ5KHZhbHVlKSk7XHJcbiAgfVxyXG4gIHJldHVybiB1aW52O1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOWwgeijhWxvY2FsU3RvcmFnZeaWueazlVxyXG4gKi9cclxudWludi5kYXRhID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcclxuICByZXR1cm4gZGF0YShsb2NhbFN0b3JhZ2UsIGtleSwgdmFsdWUpO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOWwgeijhXNlc3Npb25TdG9yYWdl5pa55rOVXHJcbiAqL1xyXG51aW52LnNlc3Npb25TdG9yYWdlID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcclxuICByZXR1cm4gZGF0YShzZXNzaW9uU3RvcmFnZSwga2V5LCB2YWx1ZSk7XHJcbn07XHJcblxyXG4vKipcclxuICog6I635Y+W5omA5pyJY29va2llXHJcbiAqIEBhdXRob3IgandcclxuICogQGRhdGUgMjAxNy0wOS0yN1xyXG4gKi9cclxudWludi5nZXRBbGxDb29raWUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgcmV0dXJuIGRvY3VtZW50LmNvb2tpZTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiDojrflj5Zjb29raWVcclxuICogQGF1dGhvciBqd1xyXG4gKiBAZGF0ZSAyMDE3LTA5LTI3XHJcbiAqL1xyXG5jb25zdCBnZXRDb29raWUgPSBmdW5jdGlvbiAobmFtZSkge1xyXG4gIHZhciByZWcgPSBuZXcgUmVnRXhwKCcoXnwgKScgKyBuYW1lICsgJz0oW147XSopKDt8JCknKSwgYXJyID0gZG9jdW1lbnQuY29va2llLm1hdGNoKHJlZyk7XHJcbiAgaWYgKGFycikge1xyXG4gICAgcmV0dXJuIHVuZXNjYXBlKGFyclsyXSk7XHJcbiAgfVxyXG4gIHJldHVybiBudWxsO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOWIoOmZpGNvb2tpZVxyXG4gKiBAYXV0aG9yIGp3XHJcbiAqIEBkYXRlIDIwMTctMDktMjdcclxuICovXHJcbmNvbnN0IGRlbENvb2tpZSA9IGZ1bmN0aW9uIChuYW1lKSB7XHJcbiAgdmFyIGN2YWwgPSBnZXRDb29raWUobmFtZSk7XHJcbiAgaWYgKGN2YWwgIT0gbnVsbCkge1xyXG4gICAgc2V0Q29va2llKG5hbWUsICcnLCAtMSk7XHJcbiAgfVxyXG59O1xyXG5cclxuLyoqXHJcbiAqIOiuvue9rmNvb2tpZVxyXG4gKiBAYXV0aG9yIGp3XHJcbiAqIEBkYXRlIDIwMTctMDktMjdcclxuICovXHJcbmNvbnN0IHNldENvb2tpZSA9IGZ1bmN0aW9uIChuYW1lLCB2YWx1ZSwgZGF5cyA9IDMwMCkge1xyXG4gIHZhciBleHAgPSBuZXcgRGF0ZSgpO1xyXG4gIGV4cC5zZXRUaW1lKGV4cC5nZXRUaW1lKCkgKyBkYXlzICogMjQgKiA2MCAqIDYwICogMTAwMCk7XHJcbiAgZG9jdW1lbnQuY29va2llID0gbmFtZSArICc9JyArIGVzY2FwZSh2YWx1ZSkgKyAnOyBwYXRoPS87ZXhwaXJlcz0nICsgZXhwLnRvVVRDU3RyaW5nKCk7XHJcbn07XHJcblxyXG4vKipcclxuICog5bCB6KOFY29va2ll5pa55rOVXHJcbiAqL1xyXG51aW52LmNvb2tpZSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XHJcbiAgaWYgKGtleSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbiAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcclxuICAgIHJldHVybiB1aW52Lmpzb25QYXJzZShnZXRDb29raWUoa2V5KSk7XHJcbiAgfSBlbHNlIGlmICh2YWx1ZSA9PSBudWxsKSB7XHJcbiAgICBkZWxDb29raWUoa2V5KTtcclxuICB9IGVsc2Uge1xyXG4gICAgc2V0Q29va2llKGtleSwgdWludi5zdHJpbmdpZnkodmFsdWUpKTtcclxuICB9XHJcbiAgcmV0dXJuIHVpbnY7XHJcbn07XHJcblxyXG51aW52LmltcG9ydEpzID0gZnVuY3Rpb24gKHBhdGgpIHtcclxuICBkb2N1bWVudC53cml0ZShcIjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J1wiICsgcGF0aCArIFwiJz48L3NjcmlwdD5cIik7XHJcbn07XHJcblxyXG51aW52LmltcG9ydENzcyA9IGZ1bmN0aW9uIChwYXRoKSB7XHJcbiAgZG9jdW1lbnQud3JpdGUoXCI8bGluayByZWw9J1NUWUxFU0hFRVQnIHR5cGU9J3RleHQvY3NzJyBocmVmPSdcIiArIHBhdGggKyBcIic+XCIpO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdWludjtcclxuIiwiLyogZXNsaW50LWRpc2FibGUgbm8tY2FsbGVyICovXHJcbi8qKlxyXG4gKiDov5nmmK/kuIDkuKrkuLrmiYDmnInmqKHlnZflvJXnlKjliY3nmoTln7rnsbvvvIzmj5Dkvpvlh6DkuKrln7rnoYDmlrnms5VcclxuICog5Y+q6IO95Zyo5rWP6KeI5Zmo5L2/55SoXHJcbiAqIOWPkeW4g+aooeW8j+S4i++8jOS8muWcqOi/meS4quaWh+S7tuS5i+WJjea3u+WKoOS4gOS4quWPmOmHj3VpbnYuaXNEaXN0ID0gdHJ1ZVxyXG4gKiBAYXV0aG9yIGp3XHJcbiAqIEBkYXRlIDIwMTgtMDctMDVcclxuICovXHJcbmNvbnN0IHV0aWw6YW55ID0ge307XHJcblxyXG4vKipcclxuICog5Yik5pat5piv5ZCm6LC35q2M5rWP6KeI5ZmoXHJcbiAqIEBhdXRob3IgandcclxuICogQGRhdGUgMjAxOC0wNS0yMlxyXG4gKi9cclxudXRpbC5pc0Nocm9tZSA9IGZ1bmN0aW9uICgpIHtcclxuICByZXR1cm4gL2Nocm9tZS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkpO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOWIpOaWreaYr+WQpklF5rWP6KeI5ZmoXHJcbiAqIEBhdXRob3IgandcclxuICogQGRhdGUgMjAxOC0wNS0yMlxyXG4gKi9cclxudXRpbC5pc0lFID0gZnVuY3Rpb24gKCkge1xyXG4gIHJldHVybiAoL21zaWUvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKSkgfHwgL1RyaWRlbnQvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKSkpICYmICEvb3BlcmEvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpKTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiDlj5Z1cmzkuK3mn5DkuKrlj4LmlbBcclxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWUg5Y+C5pWw5ZCN56ewXHJcbiAqL1xyXG51dGlsLnVybEFyZyA9IGZ1bmN0aW9uIChuYW1lKSB7XHJcbiAgdmFyIHJlZyA9IG5ldyBSZWdFeHAoJyhefCYpJyArIG5hbWUgKyAnPShbXiZdKikoJnwkKScpO1xyXG4gIHZhciByID0gd2luZG93LmxvY2F0aW9uLnNlYXJjaC5zdWJzdHIoMSkubWF0Y2gocmVnKTtcclxuICBpZiAociAhPSBudWxsKSB7XHJcbiAgICByZXR1cm4gdW5lc2NhcGUoclsyXSk7XHJcbiAgfVxyXG4gIHJldHVybiBudWxsO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOW+l+WIsOW9k+WJjeW3peeoi+WQjeensFxyXG4gKiBAYXV0aG9yIGp3XHJcbiAqIEBkYXRlIDIwMTctMDYtMTNcclxuICovXHJcbnV0aWwuZ2V0UHJvamVjdE5hbWUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIHByb2plY3QgPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWU7XHJcbiAgaWYgKHByb2plY3QuaW5kZXhPZignLycsIDEpID09IC0xKSB7XHJcbiAgICByZXR1cm4gJyc7XHJcbiAgfVxyXG4gIHJldHVybiBwcm9qZWN0LnN1YnN0cmluZygxLCBwcm9qZWN0LmluZGV4T2YoJy8nLCAxKSk7XHJcbn07XHJcblxyXG4vKipcclxuICog6I635Y+W5b2T5YmNaXDlkoznq6/lj6Plj7dcclxuICogQGF1dGhvciBqd1xyXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxyXG4gKi9cclxudXRpbC5nZXRJcCA9IGZ1bmN0aW9uICgpIHtcclxuICBpZiAod2luZG93LmxvY2F0aW9uLmhvc3QgIT0gJycpIHtcclxuICAgIHJldHVybiB3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgKyAnLy8nICsgd2luZG93LmxvY2F0aW9uLmhvc3Q7XHJcbiAgfVxyXG4gIHJldHVybiAnJztcclxufTtcclxuXHJcbi8qKlxyXG4gKiDliKTmlq3lvZPliY3mtY/op4jlmajmmK/lkKY2NOS9jVxyXG4gKiBAYXV0aG9yIGp3XHJcbiAqIEBkYXRlIDIwMTYtMTEtMTlcclxuICovXHJcbnV0aWwuaXM2NCA9IGZ1bmN0aW9uICgpIHtcclxuICByZXR1cm4gL3dpbjY0L2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSAmJiAveDY0L2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiDojrflvpd1cmzlkI7pnaLnmoTlj4LmlbBcclxuICogQHBhcmFtIHtTdHJpbmd9IHBhcmFtTmFtZVxyXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSB3aW4g56qX5Y+jXHJcbiAqIEByZXR1cm4ge09iamVjdH0g5Y+C5pWw55qE5bGe5oCnXHJcbiAqIEBleGFtcGxlIHV0aWwuZ2V0VVJMUGFyYW1zKFwiSURcIik7XHJcbiAqL1xyXG51dGlsLmdldFVSTFBhcmFtcyA9IGZ1bmN0aW9uIChwYXJhbU5hbWUsIHdpbikge1xyXG4gIHJldHVybiB0aGlzLmdldFVSTFBhcmFtc01hcCh3aW4pW3BhcmFtTmFtZV07XHJcbn07XHJcblxyXG4vKipcclxuICog6K+75Y+W5YiwdXJs55qE5Y+C5pWw77yM5pS+5YiwTWFw6YeMXHJcbiAqL1xyXG51dGlsLmdldFVSTFBhcmFtc01hcCA9IGZ1bmN0aW9uICh3aW4pIHtcclxuICBpZiAoIXdpbikge1xyXG4gICAgd2luID0gd2luZG93O1xyXG4gIH1cclxuICB2YXIgbmFtZSwgdmFsdWUsIG51bTtcclxuICB2YXIgc3RyID0gd2luLmxvY2F0aW9uLnNlYXJjaC5zdWJzdHIoMSk7XHJcbiAgdmFyIGFyciA9IHN0ci5zcGxpdCgnJicpOyAvLyDlkITkuKrlj4LmlbDmlL7liLDmlbDnu4Tph4xcclxuICB2YXIgcGFyYW1zID0ge307XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcclxuICAgIG51bSA9IGFycltpXS5pbmRleE9mKCc9Jyk7XHJcbiAgICBpZiAobnVtID4gMCkge1xyXG4gICAgICBuYW1lID0gYXJyW2ldLnN1YnN0cmluZygwLCBudW0pO1xyXG4gICAgICB2YWx1ZSA9IGFycltpXS5zdWJzdHIobnVtICsgMSk7XHJcbiAgICAgIHBhcmFtc1tuYW1lXSA9IHZhbHVlO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gcGFyYW1zO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIOWinuWKoOS4gOS4quWPguaVsOWIsFVybOS4rVxyXG4gKiBAYXV0aG9yIGp3XHJcbiAqIEBkYXRlIDIwMTctMDUtMjVcclxuICovXHJcbnV0aWwuYWRkUGFyYW0yVXJsID0gZnVuY3Rpb24gKHVybCwga2V5LCB2YWx1ZSkge1xyXG4gIHZhciBhbmRTdHIgPSAnPyc7XHJcbiAgdmFyIGJlZm9yZXBhcmFtID0gdXJsLmluZGV4T2YoJz8nKTtcclxuICBpZiAoYmVmb3JlcGFyYW0gIT0gLTEpIHtcclxuICAgIGFuZFN0ciA9ICcmJztcclxuICB9XHJcbiAgcmV0dXJuIHVybCArIGFuZFN0ciArIGtleSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7XHJcbn07XHJcblxyXG4vKipcclxuICog56e75Ye65LiA5LiqdXJs5Y+C5pWwXHJcbiAqIEBhdXRob3IgandcclxuICogQGRhdGUgMjAxNy0wNS0yNVxyXG4gKi9cclxudXRpbC5yZW1vdmVQYXJhbUZyb21VcmwgPSBmdW5jdGlvbiAodXJsLCBrZXkpIHtcclxuICBpZiAodXJsLmluZGV4T2Yoa2V5KSA9PSAtMSkge1xyXG4gICAgcmV0dXJuIHVybDtcclxuICB9XHJcbiAgdmFyIHVybFBhcmFtID0gdXJsLnN1YnN0cih1cmwuaW5kZXhPZignPycpICsgMSk7XHJcbiAgdmFyIGJlZm9yZVVybCA9IHVybC5zdWJzdHIoMCwgdXJsLmluZGV4T2YoJz8nKSk7XHJcbiAgdmFyIG5leHRVcmwgPSAnJztcclxuXHJcbiAgdmFyIGFyciA9IFtdO1xyXG4gIGlmICh1cmxQYXJhbSAhPSAnJykge1xyXG4gICAgdmFyIHVybFBhcmFtQXJyID0gdXJsUGFyYW0uc3BsaXQoJyYnKTtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdXJsUGFyYW1BcnIubGVuZ3RoOyBpKyspIHtcclxuICAgICAgdmFyIHBhcmFtQXJyID0gdXJsUGFyYW1BcnJbaV0uc3BsaXQoJz0nKTtcclxuICAgICAgaWYgKHBhcmFtQXJyWzBdICE9IGtleSkge1xyXG4gICAgICAgIGFyci5wdXNoKHVybFBhcmFtQXJyW2ldKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBpZiAoYXJyLmxlbmd0aCA+IDApIHtcclxuICAgIG5leHRVcmwgPSAnPycgKyBhcnIuam9pbignJicpO1xyXG4gIH1cclxuICB1cmwgPSBiZWZvcmVVcmwgKyBuZXh0VXJsO1xyXG4gIHJldHVybiB1cmw7XHJcbn07XHJcblxyXG51dGlsLmFkZFVybFBhcmFtID0gZnVuY3Rpb24gKHVybCwga2V5LCB2YWx1ZSkge1xyXG4gIHJldHVybiB1cmwuaW5kZXhPZignPycpICE9IC0xID8gdXJsICsgJyYnICsga2V5ICsgJz0nICsgdmFsdWUgOiB1cmwgKyAnPycgKyBrZXkgKyAnPScgKyB2YWx1ZTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiDliqjmgIHliqDovb1qc1xyXG4gKiBAYXV0aG9yIGp3XHJcbiAqIEBkYXRlIDIwMTctMTEtMjFcclxuICovXHJcbi8vIHV0aWwubG9hZFNjcmlwdCA9IGZ1bmN0aW9uICh1cmwsIGNhbGxiYWNrKSB7XHJcbi8vICAgdmFyIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xyXG4vLyAgIHNjcmlwdC50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7XHJcbi8vICAgaWYgKHV0aWwuaXNGdW5jdGlvbihjYWxsYmFjaykpIHtcclxuLy8gICAgIGlmIChzY3JpcHQucmVhZHlTdGF0ZSkge1xyXG4vLyAgICAgICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xyXG4vLyAgICAgICAgIGlmIChzY3JpcHQucmVhZHlTdGF0ZSA9PSAnbG9hZGVkJyB8fCBzY3JpcHQucmVhZHlTdGF0ZSA9PSAnY29tcGxldGUnKSB7XHJcbi8vICAgICAgICAgICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gbnVsbDtcclxuLy8gICAgICAgICAgIGNhbGxiYWNrKCk7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgICB9O1xyXG4vLyAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgc2NyaXB0Lm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcclxuLy8gICAgICAgICBjYWxsYmFjaygpO1xyXG4vLyAgICAgICB9O1xyXG4vLyAgICAgfVxyXG4vLyAgIH1cclxuLy8gICBzY3JpcHQuc3JjID0gdXJsO1xyXG4vLyAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcclxuLy8gfTtcclxuXHJcbi8qKlxyXG4gKiDliqjmgIHmt7vliqBjc3NcclxuICogQHBhcmFtIHtzdHJpbmd9IGNzc1BhdGgg6Lev5b6EXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBpZFxyXG4gKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lIOexu+agh+etvlxyXG4gKi9cclxudXRpbC5yZXF1aXJlQ3NzID0gZnVuY3Rpb24gKGNzc1BhdGgsIGlkLCBjbGFzc05hbWUpIHtcclxuICB2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpbmsnKTtcclxuICBsaW5rLnJlbCA9ICdzdHlsZXNoZWV0JztcclxuICBsaW5rLnR5cGUgPSAndGV4dC9jc3MnO1xyXG4gIGlmIChpZCkge1xyXG4gICAgbGluay5pZCA9IGlkO1xyXG4gIH1cclxuICBpZiAoY2xhc3NOYW1lKSB7XHJcbiAgICBsaW5rLmNsYXNzTmFtZSA9IGNsYXNzTmFtZTtcclxuICB9XHJcbiAgbGluay5ocmVmID0gY3NzUGF0aDtcclxuICBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdLmFwcGVuZENoaWxkKGxpbmspO1xyXG5cclxuICAvLyDku6XkuIvmmK/pnIDopoHlhbzlrrlpZTjml7bkvb/nlKhcclxuICAvLyAkKFwiaGVhZFwiKS5hcHBlbmQoXCI8bGluaz5cIik7XHJcbiAgLy8gJChcImhlYWRcIikuY2hpbGRyZW4oXCI6bGFzdFwiKS5hdHRyKHtcclxuICAvLyAgIHJlbDogXCJzdHlsZXNoZWV0XCIsXHJcbiAgLy8gICB0eXBlOiBcInRleHQvY3NzXCIsXHJcbiAgLy8gICBpZDogaWQsXHJcbiAgLy8gICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcclxuICAvLyAgIGhyZWY6IGNzc1BhdGhcclxuICAvLyB9KTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiDorr7nva7lnLDlnYDmoI/lm77moIdcclxuICovXHJcbnV0aWwuc2V0RmF2aWNvbiA9IGZ1bmN0aW9uICh1cmwpIHtcclxuICB0aGlzLnJlbW92ZUZhdmljb24oKTtcclxuICB2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpbmsnKTtcclxuICBsaW5rLnR5cGUgPSAnaW1hZ2UveC1pY29uJztcclxuICBsaW5rLnJlbCA9ICdpY29uJztcclxuICBsaW5rLmhyZWYgPSB1cmw7XHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXS5hcHBlbmRDaGlsZChsaW5rKTtcclxuICAvL2lmICh3aW5kb3cuY29uc29sZSkgY29uc29sZS5sb2coXCJTZXQgRmF2SWNvbiBVUkwgdG8gXCIgKyBnZXRGYXZpY29uKCkuaHJlZik7XHJcbn07XHJcblxyXG4vKipcclxuICog56e76Zmk5Zyw5Z2A5qCP5Zu+5qCHXHJcbiAqL1xyXG51dGlsLnJlbW92ZUZhdmljb24gPSBmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIGxpbmtzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2xpbmsnKTtcclxuICB2YXIgaGVhZCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF07XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaW5rcy5sZW5ndGg7IGkrKykge1xyXG4gICAgaWYgKGxpbmtzW2ldLmdldEF0dHJpYnV0ZSgncmVsJykgPT09ICdpY29uJykge1xyXG4gICAgICBoZWFkLnJlbW92ZUNoaWxkKGxpbmtzW2ldKTtcclxuICAgIH1cclxuICB9XHJcbn07XHJcblxyXG4vKipcclxuICog6I635Y+WdXJs55qEaGFzaOmUruWAvOWvuVxyXG4gKiBAYXV0aG9yIGp3XHJcbiAqIEBkYXRlIDIwMTctMTAtMTdcclxuICovXHJcbnV0aWwuZ2V0SGFzaE1hcCA9IGZ1bmN0aW9uICgpIHtcclxuICB2YXIgZGF0YXMgPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zcGxpdCgnIycpWzFdO1xyXG4gIHZhciBtYXAgPSB7fTtcclxuICBpZiAoIWRhdGFzKSByZXR1cm4gbWFwO1xyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YXMubGVuZ3RoOyBpKyspIHtcclxuICAgIHZhciB0ID0gZGF0YXNbaV0uc3BsaXQoJz0nKTtcclxuICAgIG1hcFt0WzBdXSA9IGRlY29kZVVSSUNvbXBvbmVudCh0WzFdKTtcclxuICB9XHJcbiAgcmV0dXJuIG1hcDtcclxufTtcclxuXHJcbi8qKlxyXG4gKiDmoLnmja5rZXnvvIzojrflj5Z1cmznmoRoYXNo5YC8XHJcbiAqIEBhdXRob3IgandcclxuICogQGRhdGUgMjAxNy0xMC0xN1xyXG4gKi9cclxudXRpbC5nZXRIYXNoQnlLZXkgPSBmdW5jdGlvbiAoa2V5KSB7XHJcbiAgcmV0dXJuIHRoaXMuZ2V0SGFzaE1hcCgpW2tleV07XHJcbn07XHJcblxyXG4vKipcclxuICog6I635Y+W5rWP6KeI5Zmo57yp5pS+5q+U5L6LXHJcbiAqIEBhdXRob3IgandcclxuICogQGRhdGUgMjAxOC0wMS0xN1xyXG4gKi9cclxudXRpbC5kZXRlY3Rab29tID0gZnVuY3Rpb24gKCkge1xyXG4gIHZhciByYXRpbyA9IDAsXHJcbiAgICBzY3JlZW4gPSB3aW5kb3cuc2NyZWVuIGFzIGFueSxcclxuICAgIHVhID0gbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpO1xyXG5cclxuICBpZiAod2luZG93LmRldmljZVBpeGVsUmF0aW8gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgcmF0aW8gPSB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbztcclxuICB9IGVsc2UgaWYgKH51YS5pbmRleE9mKCdtc2llJykpIHtcclxuICAgIGlmIChzY3JlZW4uZGV2aWNlWERQSSAmJiBzY3JlZW4ubG9naWNhbFhEUEkpIHtcclxuICAgICAgcmF0aW8gPSBzY3JlZW4uZGV2aWNlWERQSSAvIHNjcmVlbi5sb2dpY2FsWERQSTtcclxuICAgIH1cclxuICB9IGVsc2UgaWYgKHdpbmRvdy5vdXRlcldpZHRoICE9PSB1bmRlZmluZWQgJiYgd2luZG93LmlubmVyV2lkdGggIT09IHVuZGVmaW5lZCkge1xyXG4gICAgcmF0aW8gPSB3aW5kb3cub3V0ZXJXaWR0aCAvIHdpbmRvdy5pbm5lcldpZHRoO1xyXG4gIH1cclxuICByZXR1cm4gcmF0aW87XHJcbn07XHJcblxyXG4vKipcclxuICog5Yik5pat5paH5Lu25piv5ZCm5a2Y5ZyoXHJcbiAqIEBhdXRob3IgandcclxuICogQHBhcmFtIHtTdHJpbmd9IHVybCDmlofku7blnLDlnYDvvIznsbvkvLzvvJpodHRwOi8vMTI3LjAuMC4xOjgwODAvbW1kYi1yc20td2ViL2Jhc2UvZGN2L3Byb2plY3RzL3NuYXBzaG90L2ltYWdlcy9DNzQxRjc0OC05MUYwLTAwMDEtRDUyNC02ODgwMUNCRjExMDcuanBnXHJcbiAqL1xyXG4vLyB1dGlsLmlzRmlsZUV4aXN0ID0gZnVuY3Rpb24gKHVybCkge1xyXG4vLyAgIHZhciB4ID0gbmV3IEFjdGl2ZVhPYmplY3QoJ01pY3Jvc29mdC5YTUxIVFRQJyk7XHJcbi8vICAgeC5vcGVuKCdIRUFEJywgdXJsLCBmYWxzZSk7XHJcbi8vICAgeC5zZW5kKCk7XHJcbi8vICAgcmV0dXJuIHguc3RhdHVzID09IDIwMDtcclxuLy8gfTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHV0aWw7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=